//
//  internalMathTests.swift
//  
//
//  Created by narumij on 2023/11/11.
//

import XCTest
@testable import atcoder

fileprivate typealias uint = CUnsignedInt;
fileprivate typealias ll = CLongLong;
fileprivate typealias ull = CUnsignedLongLong;

fileprivate func gcd(_ a: ll,_ b: ll) -> ll {
    assert(0 <= a && 0 <= b);
    if (b == 0) { return a; }
    return gcd(b, a % b);
}

fileprivate func pow_mod_naive(_ x: ll,_ n: ull,_ mod: uint) -> ll {
    let y: ull = ull((x % ll(mod) + ll(mod)) % ll(mod));
    var z: ull = 1;
//    for (ull i = 0; i < n; i++) {
    for _ in 0..<ull(n) {
        z = (z * y) % ull(mod);
    }
    return ll(z % ull(mod));
}

fileprivate func floor_sum_naive(_ n: ll,_ m: ll,_ a: ll,_ b: ll) -> ll {
    var sum: ll = 0;
//    for (ll i = 0; i < n; i++) {
    for i in 0..<ll(n) {
        sum += (a * i + b) / m;
    }
    return sum;
}

fileprivate func is_prime_naive(_ n: ll) -> Bool {
    assert(0 <= n && n <= ll(CInt.max));
    if (n == 0 || n == 1) { return false; }
//    for (ll i = 2; i * i <= n; i++) {
    do { var i: ll = 2; while i &* i <= n { defer { i += 1 }
        if (n % i == 0) { return false; }
    } }
    return true;
}

final class internalMathTests: XCTestCase {

    override func setUpWithError() throws {
        // Put setup code here. This method is called before the invocation of each test method in the class.
    }

    override func tearDownWithError() throws {
        // Put teardown code here. This method is called after the invocation of each test method in the class.
    }

    func testBarrett() throws {
//        for (int m = 1; m <= 100; m++) {
        for m in 1..<=CInt(100) {
            let bt = barrett(CUnsignedInt(m));
//            for (int a = 0; a < m; a++) {
            for a in 0..<CInt(m) {
//                for (int b = 0; b < m; b++) {
                for b in 0..<CInt(m) {
                    XCTAssertEqual((a * b) % m, CInt(bt.mul(CUnsignedInt(a), CUnsignedInt(b))));
                }
            }
        }

        let bt = barrett(1);
        XCTAssertEqual(0, bt.mul(0, 0));
    }
    
    func testBarrettIntBorder() throws {
        let mod_upper = CUnsignedInt(CInt.max);
        
//        for (unsigned int mod = mod_upper; mod >= mod_upper - 20; mod--) {
        for mod in stride(from: mod_upper, through: mod_upper - 20, by: -1) {
            let bt = barrett(UInt32(mod));
            var v: [CUnsignedInt] = [];
//            for (int i = 0; i < 10; i++) {
            for i in CUnsignedInt(0)..<CUnsignedInt(10) {
                v.append(i);
                v.append(mod - i);
                v.append(mod / 2 + i);
                v.append(mod / 2 - i);
            }
            
            for a in v {
                let a2 = ll(a);
                XCTAssertEqual(((a2 &* a2) % ll(mod) &* a2) % ll(mod), ll(bt.mul(a, bt.mul(a, a))));
                for b in v {
                    let b2 = ll(b);
                    XCTAssertEqual((a2 * b2) % ll(mod), ll(bt.mul(UInt32(a), UInt32(b))));
                }
            }
        }
    }
    
    func testBarrettUintBorder() throws {
        
//        throw XCTSkip()

        let mod_upper = CUnsignedInt.max;
//        for (unsigned int mod = mod_upper; mod >= mod_upper - 20; mod--) {
        for mod in stride(from: mod_upper, through: mod_upper - 20, by: -1) {
            let bt = barrett(mod);
            var v: [CUnsignedInt] = [];
//            for (int i = 0; i < 10; i++) {
            for i in CUnsignedInt(0)..<CUnsignedInt(10) {
                v.append(i);
                v.append(mod - i);
                v.append(mod / 2 + i);
                v.append(mod / 2 - i);
            }
            for a in v {
                let a2 = ull(a);
                XCTAssertEqual(((a2 &* a2) % ull(mod) &* a2) % ull(mod), ull(bt.mul(a, bt.mul(a, a))));
                for b in v {
                    let b2 = ull(b);
                    XCTAssertEqual((a2 &* b2) % ull(mod), ull(bt.mul(a, b)));
                }
            }
        }
    }
    
    func testIsPrime() throws {
        
        XCTAssertFalse(_internal.is_prime(121));
        XCTAssertFalse(_internal.is_prime(11 * 13));
        XCTAssertTrue(_internal.is_prime(1_000_000_007));
        XCTAssertFalse(_internal.is_prime(1_000_000_008));
        XCTAssertTrue(_internal.is_prime(1_000_000_009));
//        for (int i = 0; i <= 10000; i++) {
        for i in 0..<=ll(10000) {
            XCTAssertEqual(is_prime_naive(i), _internal.is_prime_constexpr(CInt(i)));
        }
//        for (int i = 0; i <= 10000; i++) {
        for i in 0..<=ll(10000) {
            let x = ll(CInt.max) - i;
            XCTAssertEqual(is_prime_naive(x), _internal.is_prime_constexpr(CInt(x)));
        }
    }

    func testSafeMod() throws {
        
        throw XCTSkip("型が無く、同様の計算ができないためスキップ")
        
        /*
         std::vector<ll> preds;
         for (int i = 0; i <= 100; i++) {
             preds.push_back(i);
             preds.push_back(-i);
             preds.push_back(i);
             preds.push_back(std::numeric_limits<ll>::min() + i);
             preds.push_back(std::numeric_limits<ll>::max() - i);
         }

         for (auto a : preds) {
             for (auto b : preds) {
                 if (b <= 0) continue;
                 ll ans = (ll)((__int128(a) % b + b) % b);
                 ASSERT_EQ(ans, internal::safe_mod(a, b));
             }
         }
         */
    }
    
    func testSafeModAlt() throws {
        let ab: [(a: ll,b: ll, ans: ll)] = [
        (0,9223372036854775807,0),
        (0,1,0),
        (0,1,0),
        (0,9223372036854775806,0),
        (0,2,0),
        (0,2,0),
        (0,9223372036854775805,0),
        (0,3,0),
        (0,3,0),
        (0,9223372036854775804,0),
        (0,4,0),
        (0,4,0),
        (0,9223372036854775803,0),
        (0,5,0),
        (0,5,0),
        (0,9223372036854775802,0),
        (0,9223372036854775807,0),
        (0,1,0),
        (0,1,0),
        (0,9223372036854775806,0),
        (0,2,0),
        (0,2,0),
        (0,9223372036854775805,0),
        (0,3,0),
        (0,3,0),
        (0,9223372036854775804,0),
        (0,4,0),
        (0,4,0),
        (0,9223372036854775803,0),
        (0,5,0),
        (0,5,0),
        (0,9223372036854775802,0),
        (0,9223372036854775807,0),
        (0,1,0),
        (0,1,0),
        (0,9223372036854775806,0),
        (0,2,0),
        (0,2,0),
        (0,9223372036854775805,0),
        (0,3,0),
        (0,3,0),
        (0,9223372036854775804,0),
        (0,4,0),
        (0,4,0),
        (0,9223372036854775803,0),
        (0,5,0),
        (0,5,0),
        (0,9223372036854775802,0),
        (-9223372036854775808,9223372036854775807,9223372036854775806),
        (-9223372036854775808,1,0),
        (-9223372036854775808,1,0),
        (-9223372036854775808,9223372036854775806,9223372036854775804),
        (-9223372036854775808,2,0),
        (-9223372036854775808,2,0),
        (-9223372036854775808,9223372036854775805,9223372036854775802),
        (-9223372036854775808,3,1),
        (-9223372036854775808,3,1),
        (-9223372036854775808,9223372036854775804,9223372036854775800),
        (-9223372036854775808,4,0),
        (-9223372036854775808,4,0),
        (-9223372036854775808,9223372036854775803,9223372036854775798),
        (-9223372036854775808,5,2),
        (-9223372036854775808,5,2),
        (-9223372036854775808,9223372036854775802,9223372036854775796),
        (9223372036854775807,9223372036854775807,0),
        (9223372036854775807,1,0),
        (9223372036854775807,1,0),
        (9223372036854775807,9223372036854775806,1),
        (9223372036854775807,2,1),
        (9223372036854775807,2,1),
        (9223372036854775807,9223372036854775805,2),
        (9223372036854775807,3,1),
        (9223372036854775807,3,1),
        (9223372036854775807,9223372036854775804,3),
        (9223372036854775807,4,3),
        (9223372036854775807,4,3),
        (9223372036854775807,9223372036854775803,4),
        (9223372036854775807,5,2),
        (9223372036854775807,5,2),
        (9223372036854775807,9223372036854775802,5),
        (1,9223372036854775807,1),
        (1,1,0),
        (1,1,0),
        (1,9223372036854775806,1),
        (1,2,1),
        (1,2,1),
        (1,9223372036854775805,1),
        (1,3,1),
        (1,3,1),
        (1,9223372036854775804,1),
        (1,4,1),
        (1,4,1),
        (1,9223372036854775803,1),
        (1,5,1),
        (1,5,1),
        (1,9223372036854775802,1),
        (-1,9223372036854775807,9223372036854775806),
        (-1,1,0),
        (-1,1,0),
        (-1,9223372036854775806,9223372036854775805),
        (-1,2,1),
        (-1,2,1),
        (-1,9223372036854775805,9223372036854775804),
        (-1,3,2),
        (-1,3,2),
        (-1,9223372036854775804,9223372036854775803),
        (-1,4,3),
        (-1,4,3),
        (-1,9223372036854775803,9223372036854775802),
        (-1,5,4),
        (-1,5,4),
        (-1,9223372036854775802,9223372036854775801),
        (1,9223372036854775807,1),
        (1,1,0),
        (1,1,0),
        (1,9223372036854775806,1),
        (1,2,1),
        (1,2,1),
        (1,9223372036854775805,1),
        (1,3,1),
        (1,3,1),
        (1,9223372036854775804,1),
        (1,4,1),
        (1,4,1),
        (1,9223372036854775803,1),
        (1,5,1),
        (1,5,1),
        (1,9223372036854775802,1),
        (-9223372036854775807,9223372036854775807,0),
        (-9223372036854775807,1,0),
        (-9223372036854775807,1,0),
        (-9223372036854775807,9223372036854775806,9223372036854775805),
        (-9223372036854775807,2,1),
        (-9223372036854775807,2,1),
        (-9223372036854775807,9223372036854775805,9223372036854775803),
        (-9223372036854775807,3,2),
        (-9223372036854775807,3,2),
        (-9223372036854775807,9223372036854775804,9223372036854775801),
        (-9223372036854775807,4,1),
        (-9223372036854775807,4,1),
        (-9223372036854775807,9223372036854775803,9223372036854775799),
        (-9223372036854775807,5,3),
        (-9223372036854775807,5,3),
        (-9223372036854775807,9223372036854775802,9223372036854775797),
        (9223372036854775806,9223372036854775807,9223372036854775806),
        (9223372036854775806,1,0),
        (9223372036854775806,1,0),
        (9223372036854775806,9223372036854775806,0),
        (9223372036854775806,2,0),
        (9223372036854775806,2,0),
        (9223372036854775806,9223372036854775805,1),
        (9223372036854775806,3,0),
        (9223372036854775806,3,0),
        (9223372036854775806,9223372036854775804,2),
        (9223372036854775806,4,2),
        (9223372036854775806,4,2),
        (9223372036854775806,9223372036854775803,3),
        (9223372036854775806,5,1),
        (9223372036854775806,5,1),
        (9223372036854775806,9223372036854775802,4),
        (2,9223372036854775807,2),
        (2,1,0),
        (2,1,0),
        (2,9223372036854775806,2),
        (2,2,0),
        (2,2,0),
        (2,9223372036854775805,2),
        (2,3,2),
        (2,3,2),
        (2,9223372036854775804,2),
        (2,4,2),
        (2,4,2),
        (2,9223372036854775803,2),
        (2,5,2),
        (2,5,2),
        (2,9223372036854775802,2),
        (-2,9223372036854775807,9223372036854775805),
        (-2,1,0),
        (-2,1,0),
        (-2,9223372036854775806,9223372036854775804),
        (-2,2,0),
        (-2,2,0),
        (-2,9223372036854775805,9223372036854775803),
        (-2,3,1),
        (-2,3,1),
        (-2,9223372036854775804,9223372036854775802),
        (-2,4,2),
        (-2,4,2),
        (-2,9223372036854775803,9223372036854775801),
        (-2,5,3),
        (-2,5,3),
        (-2,9223372036854775802,9223372036854775800),
        (2,9223372036854775807,2),
        (2,1,0),
        (2,1,0),
        (2,9223372036854775806,2),
        (2,2,0),
        (2,2,0),
        (2,9223372036854775805,2),
        (2,3,2),
        (2,3,2),
        (2,9223372036854775804,2),
        (2,4,2),
        (2,4,2),
        (2,9223372036854775803,2),
        (2,5,2),
        (2,5,2),
        (2,9223372036854775802,2),
        (-9223372036854775806,9223372036854775807,1),
        (-9223372036854775806,1,0),
        (-9223372036854775806,1,0),
        (-9223372036854775806,9223372036854775806,0),
        (-9223372036854775806,2,0),
        (-9223372036854775806,2,0),
        (-9223372036854775806,9223372036854775805,9223372036854775804),
        (-9223372036854775806,3,0),
        (-9223372036854775806,3,0),
        (-9223372036854775806,9223372036854775804,9223372036854775802),
        (-9223372036854775806,4,2),
        (-9223372036854775806,4,2),
        (-9223372036854775806,9223372036854775803,9223372036854775800),
        (-9223372036854775806,5,4),
        (-9223372036854775806,5,4),
        (-9223372036854775806,9223372036854775802,9223372036854775798),
        (9223372036854775805,9223372036854775807,9223372036854775805),
        (9223372036854775805,1,0),
        (9223372036854775805,1,0),
        (9223372036854775805,9223372036854775806,9223372036854775805),
        (9223372036854775805,2,1),
        (9223372036854775805,2,1),
        (9223372036854775805,9223372036854775805,0),
        (9223372036854775805,3,2),
        (9223372036854775805,3,2),
        (9223372036854775805,9223372036854775804,1),
        (9223372036854775805,4,1),
        (9223372036854775805,4,1),
        (9223372036854775805,9223372036854775803,2),
        (9223372036854775805,5,0),
        (9223372036854775805,5,0),
        (9223372036854775805,9223372036854775802,3),
        (3,9223372036854775807,3),
        (3,1,0),
        (3,1,0),
        (3,9223372036854775806,3),
        (3,2,1),
        (3,2,1),
        (3,9223372036854775805,3),
        (3,3,0),
        (3,3,0),
        (3,9223372036854775804,3),
        (3,4,3),
        (3,4,3),
        (3,9223372036854775803,3),
        (3,5,3),
        (3,5,3),
        (3,9223372036854775802,3),
        (-3,9223372036854775807,9223372036854775804),
        (-3,1,0),
        (-3,1,0),
        (-3,9223372036854775806,9223372036854775803),
        (-3,2,1),
        (-3,2,1),
        (-3,9223372036854775805,9223372036854775802),
        (-3,3,0),
        (-3,3,0),
        (-3,9223372036854775804,9223372036854775801),
        (-3,4,1),
        (-3,4,1),
        (-3,9223372036854775803,9223372036854775800),
        (-3,5,2),
        (-3,5,2),
        (-3,9223372036854775802,9223372036854775799),
        (3,9223372036854775807,3),
        (3,1,0),
        (3,1,0),
        (3,9223372036854775806,3),
        (3,2,1),
        (3,2,1),
        (3,9223372036854775805,3),
        (3,3,0),
        (3,3,0),
        (3,9223372036854775804,3),
        (3,4,3),
        (3,4,3),
        (3,9223372036854775803,3),
        (3,5,3),
        (3,5,3),
        (3,9223372036854775802,3),
        (-9223372036854775805,9223372036854775807,2),
        (-9223372036854775805,1,0),
        (-9223372036854775805,1,0),
        (-9223372036854775805,9223372036854775806,1),
        (-9223372036854775805,2,1),
        (-9223372036854775805,2,1),
        (-9223372036854775805,9223372036854775805,0),
        (-9223372036854775805,3,1),
        (-9223372036854775805,3,1),
        (-9223372036854775805,9223372036854775804,9223372036854775803),
        (-9223372036854775805,4,3),
        (-9223372036854775805,4,3),
        (-9223372036854775805,9223372036854775803,9223372036854775801),
        (-9223372036854775805,5,0),
        (-9223372036854775805,5,0),
        (-9223372036854775805,9223372036854775802,9223372036854775799),
        (9223372036854775804,9223372036854775807,9223372036854775804),
        (9223372036854775804,1,0),
        (9223372036854775804,1,0),
        (9223372036854775804,9223372036854775806,9223372036854775804),
        (9223372036854775804,2,0),
        (9223372036854775804,2,0),
        (9223372036854775804,9223372036854775805,9223372036854775804),
        (9223372036854775804,3,1),
        (9223372036854775804,3,1),
        (9223372036854775804,9223372036854775804,0),
        (9223372036854775804,4,0),
        (9223372036854775804,4,0),
        (9223372036854775804,9223372036854775803,1),
        (9223372036854775804,5,4),
        (9223372036854775804,5,4),
        (9223372036854775804,9223372036854775802,2),
        (4,9223372036854775807,4),
        (4,1,0),
        (4,1,0),
        (4,9223372036854775806,4),
        (4,2,0),
        (4,2,0),
        (4,9223372036854775805,4),
        (4,3,1),
        (4,3,1),
        (4,9223372036854775804,4),
        (4,4,0),
        (4,4,0),
        (4,9223372036854775803,4),
        (4,5,4),
        (4,5,4),
        (4,9223372036854775802,4),
        (-4,9223372036854775807,9223372036854775803),
        (-4,1,0),
        (-4,1,0),
        (-4,9223372036854775806,9223372036854775802),
        (-4,2,0),
        (-4,2,0),
        (-4,9223372036854775805,9223372036854775801),
        (-4,3,2),
        (-4,3,2),
        (-4,9223372036854775804,9223372036854775800),
        (-4,4,0),
        (-4,4,0),
        (-4,9223372036854775803,9223372036854775799),
        (-4,5,1),
        (-4,5,1),
        (-4,9223372036854775802,9223372036854775798),
        (4,9223372036854775807,4),
        (4,1,0),
        (4,1,0),
        (4,9223372036854775806,4),
        (4,2,0),
        (4,2,0),
        (4,9223372036854775805,4),
        (4,3,1),
        (4,3,1),
        (4,9223372036854775804,4),
        (4,4,0),
        (4,4,0),
        (4,9223372036854775803,4),
        (4,5,4),
        (4,5,4),
        (4,9223372036854775802,4),
        (-9223372036854775804,9223372036854775807,3),
        (-9223372036854775804,1,0),
        (-9223372036854775804,1,0),
        (-9223372036854775804,9223372036854775806,2),
        (-9223372036854775804,2,0),
        (-9223372036854775804,2,0),
        (-9223372036854775804,9223372036854775805,1),
        (-9223372036854775804,3,2),
        (-9223372036854775804,3,2),
        (-9223372036854775804,9223372036854775804,0),
        (-9223372036854775804,4,0),
        (-9223372036854775804,4,0),
        (-9223372036854775804,9223372036854775803,9223372036854775802),
        (-9223372036854775804,5,1),
        (-9223372036854775804,5,1),
        (-9223372036854775804,9223372036854775802,9223372036854775800),
        (9223372036854775803,9223372036854775807,9223372036854775803),
        (9223372036854775803,1,0),
        (9223372036854775803,1,0),
        (9223372036854775803,9223372036854775806,9223372036854775803),
        (9223372036854775803,2,1),
        (9223372036854775803,2,1),
        (9223372036854775803,9223372036854775805,9223372036854775803),
        (9223372036854775803,3,0),
        (9223372036854775803,3,0),
        (9223372036854775803,9223372036854775804,9223372036854775803),
        (9223372036854775803,4,3),
        (9223372036854775803,4,3),
        (9223372036854775803,9223372036854775803,0),
        (9223372036854775803,5,3),
        (9223372036854775803,5,3),
        (9223372036854775803,9223372036854775802,1),
        (5,9223372036854775807,5),
        (5,1,0),
        (5,1,0),
        (5,9223372036854775806,5),
        (5,2,1),
        (5,2,1),
        (5,9223372036854775805,5),
        (5,3,2),
        (5,3,2),
        (5,9223372036854775804,5),
        (5,4,1),
        (5,4,1),
        (5,9223372036854775803,5),
        (5,5,0),
        (5,5,0),
        (5,9223372036854775802,5),
        (-5,9223372036854775807,9223372036854775802),
        (-5,1,0),
        (-5,1,0),
        (-5,9223372036854775806,9223372036854775801),
        (-5,2,1),
        (-5,2,1),
        (-5,9223372036854775805,9223372036854775800),
        (-5,3,1),
        (-5,3,1),
        (-5,9223372036854775804,9223372036854775799),
        (-5,4,3),
        (-5,4,3),
        (-5,9223372036854775803,9223372036854775798),
        (-5,5,0),
        (-5,5,0),
        (-5,9223372036854775802,9223372036854775797),
        (5,9223372036854775807,5),
        (5,1,0),
        (5,1,0),
        (5,9223372036854775806,5),
        (5,2,1),
        (5,2,1),
        (5,9223372036854775805,5),
        (5,3,2),
        (5,3,2),
        (5,9223372036854775804,5),
        (5,4,1),
        (5,4,1),
        (5,9223372036854775803,5),
        (5,5,0),
        (5,5,0),
        (5,9223372036854775802,5),
        (-9223372036854775803,9223372036854775807,4),
        (-9223372036854775803,1,0),
        (-9223372036854775803,1,0),
        (-9223372036854775803,9223372036854775806,3),
        (-9223372036854775803,2,1),
        (-9223372036854775803,2,1),
        (-9223372036854775803,9223372036854775805,2),
        (-9223372036854775803,3,0),
        (-9223372036854775803,3,0),
        (-9223372036854775803,9223372036854775804,1),
        (-9223372036854775803,4,1),
        (-9223372036854775803,4,1),
        (-9223372036854775803,9223372036854775803,0),
        (-9223372036854775803,5,2),
        (-9223372036854775803,5,2),
        (-9223372036854775803,9223372036854775802,9223372036854775801),
        (9223372036854775802,9223372036854775807,9223372036854775802),
        (9223372036854775802,1,0),
        (9223372036854775802,1,0),
        (9223372036854775802,9223372036854775806,9223372036854775802),
        (9223372036854775802,2,0),
        (9223372036854775802,2,0),
        (9223372036854775802,9223372036854775805,9223372036854775802),
        (9223372036854775802,3,2),
        (9223372036854775802,3,2),
        (9223372036854775802,9223372036854775804,9223372036854775802),
        (9223372036854775802,4,2),
        (9223372036854775802,4,2),
        (9223372036854775802,9223372036854775803,9223372036854775802),
        (9223372036854775802,5,2),
        (9223372036854775802,5,2),
        (9223372036854775802,9223372036854775802,0),
        ]

        for (a,b,ans) in ab {
            XCTAssertEqual(ans, _internal.safe_mod(a, b));
        }
    }
    
    func testInvGcdBound() throws {
        
//        throw XCTSkip()
        
        var pred = [ll]();
//        for i in 0..<=10 {
        for i in 0..<=ll(10) {
            pred.append(i);
            pred.append(-i);
            pred.append(ll.min + i);
            pred.append(ll.max - i);

            pred.append(ll.min / 2 + i);
            pred.append(ll.min / 2 - i);
            pred.append(ll.max / 2 + i);
            pred.append(ll.max / 2 - i);

            pred.append(ll.min / 3 + i);
            pred.append(ll.min / 3 - i);
            pred.append(ll.max / 3 + i);
            pred.append(ll.max / 3 - i);
        }
        pred.append(998244353);
        pred.append(1_000_000_007);
        pred.append(1_000_000_009);
        pred.append(-998244353);
        pred.append(-1_000_000_007);
        pred.append(-1_000_000_009);
        
        for a in pred {
            for b in pred {
                if (b <= 0) { continue; }
                let a2 = _internal.safe_mod(a, b);
                let eg = _internal.inv_gcd(a, b);
                let g = gcd(a2, b);
                XCTAssertEqual(g, eg.first);
                XCTAssertLessThanOrEqual(0, eg.second, "a - \(a), b - \(b)");
                XCTAssertLessThanOrEqual(eg.second, b / eg.first, "a - \(a), b - \(b)");
                // ASSERT_EQ(g % b, (unsigned __int128)(eg.second) * a2 % b);
                // 再現できず
                // XCTAssertEqual(Int64(g % b), eg.second.multipliedFullWidth(by: a2).high % Int64(b));
            }
        }
    }
    
    func testInvGcdBoundAlt() throws {
        let ab: [(a: ll,b: ll, a2: ll, eg: (ll,ll), g: ll)] = [
        (0,9223372036854775807,0,(9223372036854775807,0),9223372036854775807),
        (0,4611686018427387903,0,(4611686018427387903,0),4611686018427387903),
        (0,4611686018427387903,0,(4611686018427387903,0),4611686018427387903),
        (0,3074457345618258602,0,(3074457345618258602,0),3074457345618258602),
        (0,3074457345618258602,0,(3074457345618258602,0),3074457345618258602),
        (0,1,0,(1,0),1),
        (0,9223372036854775806,0,(9223372036854775806,0),9223372036854775806),
        (0,4611686018427387904,0,(4611686018427387904,0),4611686018427387904),
        (0,4611686018427387902,0,(4611686018427387902,0),4611686018427387902),
        (0,3074457345618258603,0,(3074457345618258603,0),3074457345618258603),
        (0,3074457345618258601,0,(3074457345618258601,0),3074457345618258601),
        (0,998244353,0,(998244353,0),998244353),
        (0,1000000007,0,(1000000007,0),1000000007),
        (0,1000000009,0,(1000000009,0),1000000009),
        (0,9223372036854775807,0,(9223372036854775807,0),9223372036854775807),
        (0,4611686018427387903,0,(4611686018427387903,0),4611686018427387903),
        (0,4611686018427387903,0,(4611686018427387903,0),4611686018427387903),
        (0,3074457345618258602,0,(3074457345618258602,0),3074457345618258602),
        (0,3074457345618258602,0,(3074457345618258602,0),3074457345618258602),
        (0,1,0,(1,0),1),
        (0,9223372036854775806,0,(9223372036854775806,0),9223372036854775806),
        (0,4611686018427387904,0,(4611686018427387904,0),4611686018427387904),
        (0,4611686018427387902,0,(4611686018427387902,0),4611686018427387902),
        (0,3074457345618258603,0,(3074457345618258603,0),3074457345618258603),
        (0,3074457345618258601,0,(3074457345618258601,0),3074457345618258601),
        (0,998244353,0,(998244353,0),998244353),
        (0,1000000007,0,(1000000007,0),1000000007),
        (0,1000000009,0,(1000000009,0),1000000009),
        (-9223372036854775808,9223372036854775807,9223372036854775806,(1,9223372036854775806),1),
        (-9223372036854775808,4611686018427387903,4611686018427387901,(1,2305843009213693951),1),
        (-9223372036854775808,4611686018427387903,4611686018427387901,(1,2305843009213693951),1),
        (-9223372036854775808,3074457345618258602,3074457345618258600,(2,1537228672809129300),2),
        (-9223372036854775808,3074457345618258602,3074457345618258600,(2,1537228672809129300),2),
        (-9223372036854775808,1,0,(1,0),1),
        (-9223372036854775808,9223372036854775806,9223372036854775804,(2,4611686018427387902),2),
        (-9223372036854775808,4611686018427387904,0,(4611686018427387904,0),4611686018427387904),
        (-9223372036854775808,4611686018427387902,4611686018427387898,(2,1152921504606846975),2),
        (-9223372036854775808,3074457345618258603,1,(1,1),1),
        (-9223372036854775808,3074457345618258601,3074457345618258596,(1,614891469123651720),1),
        (-9223372036854775808,998244353,532218398,(1,107850176),1),
        (-9223372036854775808,1000000007,708828003,(1,463593567),1),
        (-9223372036854775808,1000000009,155571778,(1,408458426),1),
        (9223372036854775807,9223372036854775807,0,(9223372036854775807,0),9223372036854775807),
        (9223372036854775807,4611686018427387903,1,(1,1),1),
        (9223372036854775807,4611686018427387903,1,(1,1),1),
        (9223372036854775807,3074457345618258602,1,(1,1),1),
        (9223372036854775807,3074457345618258602,1,(1,1),1),
        (9223372036854775807,1,0,(1,0),1),
        (9223372036854775807,9223372036854775806,1,(1,1),1),
        (9223372036854775807,4611686018427387904,4611686018427387903,(1,4611686018427387903),1),
        (9223372036854775807,4611686018427387902,3,(1,1537228672809129301),1),
        (9223372036854775807,3074457345618258603,3074457345618258601,(1,1537228672809129301),1),
        (9223372036854775807,3074457345618258601,4,(1,2305843009213693951),1),
        (9223372036854775807,998244353,466025954,(1,776960636),1),
        (9223372036854775807,1000000007,291172003,(1,933137596),1),
        (9223372036854775807,1000000009,844428230,(1,479091556),1),
        (-4611686018427387904,9223372036854775807,4611686018427387903,(1,9223372036854775805),1),
        (-4611686018427387904,4611686018427387903,4611686018427387902,(1,4611686018427387902),1),
        (-4611686018427387904,4611686018427387903,4611686018427387902,(1,4611686018427387902),1),
        (-4611686018427387904,3074457345618258602,1537228672809129300,(2,1537228672809129299),2),
        (-4611686018427387904,3074457345618258602,1537228672809129300,(2,1537228672809129299),2),
        (-4611686018427387904,1,0,(1,0),1),
        (-4611686018427387904,9223372036854775806,4611686018427387902,(2,4611686018427387901),2),
        (-4611686018427387904,4611686018427387904,0,(4611686018427387904,0),4611686018427387904),
        (-4611686018427387904,4611686018427387902,4611686018427387900,(2,2305843009213693950),2),
        (-4611686018427387904,3074457345618258603,1537228672809129302,(1,2),1),
        (-4611686018427387904,3074457345618258601,1537228672809129298,(1,1229782938247303440),1),
        (-4611686018427387904,998244353,266109199,(1,215700352),1),
        (-4611686018427387904,1000000007,854414005,(1,927187134),1),
        (-4611686018427387904,1000000009,77785889,(1,816916852),1),
        (-4611686018427387904,9223372036854775807,4611686018427387903,(1,9223372036854775805),1),
        (-4611686018427387904,4611686018427387903,4611686018427387902,(1,4611686018427387902),1),
        (-4611686018427387904,4611686018427387903,4611686018427387902,(1,4611686018427387902),1),
        (-4611686018427387904,3074457345618258602,1537228672809129300,(2,1537228672809129299),2),
        (-4611686018427387904,3074457345618258602,1537228672809129300,(2,1537228672809129299),2),
        (-4611686018427387904,1,0,(1,0),1),
        (-4611686018427387904,9223372036854775806,4611686018427387902,(2,4611686018427387901),2),
        (-4611686018427387904,4611686018427387904,0,(4611686018427387904,0),4611686018427387904),
        (-4611686018427387904,4611686018427387902,4611686018427387900,(2,2305843009213693950),2),
        (-4611686018427387904,3074457345618258603,1537228672809129302,(1,2),1),
        (-4611686018427387904,3074457345618258601,1537228672809129298,(1,1229782938247303440),1),
        (-4611686018427387904,998244353,266109199,(1,215700352),1),
        (-4611686018427387904,1000000007,854414005,(1,927187134),1),
        (-4611686018427387904,1000000009,77785889,(1,816916852),1),
        (4611686018427387903,9223372036854775807,4611686018427387903,(1,9223372036854775805),1),
        (4611686018427387903,4611686018427387903,0,(4611686018427387903,0),4611686018427387903),
        (4611686018427387903,4611686018427387903,0,(4611686018427387903,0),4611686018427387903),
        (4611686018427387903,3074457345618258602,1537228672809129301,(1537228672809129301,1),1537228672809129301),
        (4611686018427387903,3074457345618258602,1537228672809129301,(1537228672809129301,1),1537228672809129301),
        (4611686018427387903,1,0,(1,0),1),
        (4611686018427387903,9223372036854775806,4611686018427387903,(4611686018427387903,1),4611686018427387903),
        (4611686018427387903,4611686018427387904,4611686018427387903,(1,4611686018427387903),1),
        (4611686018427387903,4611686018427387902,1,(1,1),1),
        (4611686018427387903,3074457345618258603,1537228672809129300,(3,1024819115206086199),3),
        (4611686018427387903,3074457345618258601,1537228672809129302,(1,1024819115206086201),1),
        (4611686018427387903,998244353,732135153,(1,699752290),1),
        (4611686018427387903,1000000007,145586001,(1,857606487),1),
        (4611686018427387903,1000000009,922214119,(1,401318019),1),
        (4611686018427387903,9223372036854775807,4611686018427387903,(1,9223372036854775805),1),
        (4611686018427387903,4611686018427387903,0,(4611686018427387903,0),4611686018427387903),
        (4611686018427387903,4611686018427387903,0,(4611686018427387903,0),4611686018427387903),
        (4611686018427387903,3074457345618258602,1537228672809129301,(1537228672809129301,1),1537228672809129301),
        (4611686018427387903,3074457345618258602,1537228672809129301,(1537228672809129301,1),1537228672809129301),
        (4611686018427387903,1,0,(1,0),1),
        (4611686018427387903,9223372036854775806,4611686018427387903,(4611686018427387903,1),4611686018427387903),
        (4611686018427387903,4611686018427387904,4611686018427387903,(1,4611686018427387903),1),
        (4611686018427387903,4611686018427387902,1,(1,1),1),
        (4611686018427387903,3074457345618258603,1537228672809129300,(3,1024819115206086199),3),
        (4611686018427387903,3074457345618258601,1537228672809129302,(1,1024819115206086201),1),
        (4611686018427387903,998244353,732135153,(1,699752290),1),
        (4611686018427387903,1000000007,145586001,(1,857606487),1),
        (4611686018427387903,1000000009,922214119,(1,401318019),1),
        (-3074457345618258602,9223372036854775807,6148914691236517205,(1,3),1),
        (-3074457345618258602,4611686018427387903,1537228672809129301,(1537228672809129301,1),1537228672809129301),
        (-3074457345618258602,4611686018427387903,1537228672809129301,(1537228672809129301,1),1537228672809129301),
        (-3074457345618258602,3074457345618258602,0,(3074457345618258602,0),3074457345618258602),
        (-3074457345618258602,3074457345618258602,0,(3074457345618258602,0),3074457345618258602),
        (-3074457345618258602,1,0,(1,0),1),
        (-3074457345618258602,9223372036854775806,6148914691236517204,(3074457345618258602,2),3074457345618258602),
        (-3074457345618258602,4611686018427387904,1537228672809129302,(2,3),2),
        (-3074457345618258602,4611686018427387902,1537228672809129300,(2,2305843009213693948),2),
        (-3074457345618258602,3074457345618258603,1,(1,1),1),
        (-3074457345618258602,3074457345618258601,3074457345618258600,(1,3074457345618258600),1),
        (-3074457345618258602,998244353,510154251,(1,946860271),1),
        (-3074457345618258602,1000000007,902942673,(1,213590280),1),
        (-3074457345618258602,1000000009,51857260,(1,898022985),1),
        (-3074457345618258602,9223372036854775807,6148914691236517205,(1,3),1),
        (-3074457345618258602,4611686018427387903,1537228672809129301,(1537228672809129301,1),1537228672809129301),
        (-3074457345618258602,4611686018427387903,1537228672809129301,(1537228672809129301,1),1537228672809129301),
        (-3074457345618258602,3074457345618258602,0,(3074457345618258602,0),3074457345618258602),
        (-3074457345618258602,3074457345618258602,0,(3074457345618258602,0),3074457345618258602),
        (-3074457345618258602,1,0,(1,0),1),
        (-3074457345618258602,9223372036854775806,6148914691236517204,(3074457345618258602,2),3074457345618258602),
        (-3074457345618258602,4611686018427387904,1537228672809129302,(2,3),2),
        (-3074457345618258602,4611686018427387902,1537228672809129300,(2,2305843009213693948),2),
        (-3074457345618258602,3074457345618258603,1,(1,1),1),
        (-3074457345618258602,3074457345618258601,3074457345618258600,(1,3074457345618258600),1),
        (-3074457345618258602,998244353,510154251,(1,946860271),1),
        (-3074457345618258602,1000000007,902942673,(1,213590280),1),
        (-3074457345618258602,1000000009,51857260,(1,898022985),1),
        (3074457345618258602,9223372036854775807,3074457345618258602,(1,9223372036854775804),1),
        (3074457345618258602,4611686018427387903,3074457345618258602,(1537228672809129301,2),1537228672809129301),
        (3074457345618258602,4611686018427387903,3074457345618258602,(1537228672809129301,2),1537228672809129301),
        (3074457345618258602,3074457345618258602,0,(3074457345618258602,0),3074457345618258602),
        (3074457345618258602,3074457345618258602,0,(3074457345618258602,0),3074457345618258602),
        (3074457345618258602,1,0,(1,0),1),
        (3074457345618258602,9223372036854775806,3074457345618258602,(3074457345618258602,1),3074457345618258602),
        (3074457345618258602,4611686018427387904,3074457345618258602,(2,2305843009213693949),2),
        (3074457345618258602,4611686018427387902,3074457345618258602,(2,3),2),
        (3074457345618258602,3074457345618258603,3074457345618258602,(1,3074457345618258602),1),
        (3074457345618258602,3074457345618258601,1,(1,1),1),
        (3074457345618258602,998244353,488090102,(1,51384082),1),
        (3074457345618258602,1000000007,97057334,(1,786409727),1),
        (3074457345618258602,1000000009,948142749,(1,101977024),1),
        (3074457345618258602,9223372036854775807,3074457345618258602,(1,9223372036854775804),1),
        (3074457345618258602,4611686018427387903,3074457345618258602,(1537228672809129301,2),1537228672809129301),
        (3074457345618258602,4611686018427387903,3074457345618258602,(1537228672809129301,2),1537228672809129301),
        (3074457345618258602,3074457345618258602,0,(3074457345618258602,0),3074457345618258602),
        (3074457345618258602,3074457345618258602,0,(3074457345618258602,0),3074457345618258602),
        (3074457345618258602,1,0,(1,0),1),
        (3074457345618258602,9223372036854775806,3074457345618258602,(3074457345618258602,1),3074457345618258602),
        (3074457345618258602,4611686018427387904,3074457345618258602,(2,2305843009213693949),2),
        (3074457345618258602,4611686018427387902,3074457345618258602,(2,3),2),
        (3074457345618258602,3074457345618258603,3074457345618258602,(1,3074457345618258602),1),
        (3074457345618258602,3074457345618258601,1,(1,1),1),
        (3074457345618258602,998244353,488090102,(1,51384082),1),
        (3074457345618258602,1000000007,97057334,(1,786409727),1),
        (3074457345618258602,1000000009,948142749,(1,101977024),1),
        (1,9223372036854775807,1,(1,1),1),
        (1,4611686018427387903,1,(1,1),1),
        (1,4611686018427387903,1,(1,1),1),
        (1,3074457345618258602,1,(1,1),1),
        (1,3074457345618258602,1,(1,1),1),
        (1,1,0,(1,0),1),
        (1,9223372036854775806,1,(1,1),1),
        (1,4611686018427387904,1,(1,1),1),
        (1,4611686018427387902,1,(1,1),1),
        (1,3074457345618258603,1,(1,1),1),
        (1,3074457345618258601,1,(1,1),1),
        (1,998244353,1,(1,1),1),
        (1,1000000007,1,(1,1),1),
        (1,1000000009,1,(1,1),1),
        (-1,9223372036854775807,9223372036854775806,(1,9223372036854775806),1),
        (-1,4611686018427387903,4611686018427387902,(1,4611686018427387902),1),
        (-1,4611686018427387903,4611686018427387902,(1,4611686018427387902),1),
        (-1,3074457345618258602,3074457345618258601,(1,3074457345618258601),1),
        (-1,3074457345618258602,3074457345618258601,(1,3074457345618258601),1),
        (-1,1,0,(1,0),1),
        (-1,9223372036854775806,9223372036854775805,(1,9223372036854775805),1),
        (-1,4611686018427387904,4611686018427387903,(1,4611686018427387903),1),
        (-1,4611686018427387902,4611686018427387901,(1,4611686018427387901),1),
        (-1,3074457345618258603,3074457345618258602,(1,3074457345618258602),1),
        (-1,3074457345618258601,3074457345618258600,(1,3074457345618258600),1),
        (-1,998244353,998244352,(1,998244352),1),
        (-1,1000000007,1000000006,(1,1000000006),1),
        (-1,1000000009,1000000008,(1,1000000008),1),
        (-9223372036854775807,9223372036854775807,0,(9223372036854775807,0),9223372036854775807),
        (-9223372036854775807,4611686018427387903,4611686018427387902,(1,4611686018427387902),1),
        (-9223372036854775807,4611686018427387903,4611686018427387902,(1,4611686018427387902),1),
        (-9223372036854775807,3074457345618258602,3074457345618258601,(1,3074457345618258601),1),
        (-9223372036854775807,3074457345618258602,3074457345618258601,(1,3074457345618258601),1),
        (-9223372036854775807,1,0,(1,0),1),
        (-9223372036854775807,9223372036854775806,9223372036854775805,(1,9223372036854775805),1),
        (-9223372036854775807,4611686018427387904,1,(1,1),1),
        (-9223372036854775807,4611686018427387902,4611686018427387899,(1,3074457345618258601),1),
        (-9223372036854775807,3074457345618258603,2,(1,1537228672809129302),1),
        (-9223372036854775807,3074457345618258601,3074457345618258597,(1,768614336404564650),1),
        (-9223372036854775807,998244353,532218399,(1,221283717),1),
        (-9223372036854775807,1000000007,708828004,(1,66862411),1),
        (-9223372036854775807,1000000009,155571779,(1,520908453),1),
        (9223372036854775806,9223372036854775807,9223372036854775806,(1,9223372036854775806),1),
        (9223372036854775806,4611686018427387903,0,(4611686018427387903,0),4611686018427387903),
        (9223372036854775806,4611686018427387903,0,(4611686018427387903,0),4611686018427387903),
        (9223372036854775806,3074457345618258602,0,(3074457345618258602,0),3074457345618258602),
        (9223372036854775806,3074457345618258602,0,(3074457345618258602,0),3074457345618258602),
        (9223372036854775806,1,0,(1,0),1),
        (9223372036854775806,9223372036854775806,0,(9223372036854775806,0),9223372036854775806),
        (9223372036854775806,4611686018427387904,4611686018427387902,(2,2305843009213693951),2),
        (9223372036854775806,4611686018427387902,2,(2,1),2),
        (9223372036854775806,3074457345618258603,3074457345618258600,(3,1024819115206086200),3),
        (9223372036854775806,3074457345618258601,3,(1,2049638230412172401),1),
        (9223372036854775806,998244353,466025953,(1,349876145),1),
        (9223372036854775806,1000000007,291172002,(1,928803247),1),
        (9223372036854775806,1000000009,844428229,(1,700659014),1),
        (-4611686018427387903,9223372036854775807,4611686018427387904,(1,2),1),
        (-4611686018427387903,4611686018427387903,0,(4611686018427387903,0),4611686018427387903),
        (-4611686018427387903,4611686018427387903,0,(4611686018427387903,0),4611686018427387903),
        (-4611686018427387903,3074457345618258602,1537228672809129301,(1537228672809129301,1),1537228672809129301),
        (-4611686018427387903,3074457345618258602,1537228672809129301,(1537228672809129301,1),1537228672809129301),
        (-4611686018427387903,1,0,(1,0),1),
        (-4611686018427387903,9223372036854775806,4611686018427387903,(4611686018427387903,1),4611686018427387903),
        (-4611686018427387903,4611686018427387904,1,(1,1),1),
        (-4611686018427387903,4611686018427387902,4611686018427387901,(1,4611686018427387901),1),
        (-4611686018427387903,3074457345618258603,1537228672809129303,(3,2),3),
        (-4611686018427387903,3074457345618258601,1537228672809129299,(1,2049638230412172400),1),
        (-4611686018427387903,998244353,266109200,(1,298492063),1),
        (-4611686018427387903,1000000007,854414006,(1,142393520),1),
        (-4611686018427387903,1000000009,77785890,(1,598681990),1),
        (-4611686018427387905,9223372036854775807,4611686018427387902,(1,6148914691236517204),1),
        (-4611686018427387905,4611686018427387903,4611686018427387901,(1,2305843009213693951),1),
        (-4611686018427387905,4611686018427387903,4611686018427387901,(1,2305843009213693951),1),
        (-4611686018427387905,3074457345618258602,1537228672809129299,(1,2305843009213693951),1),
        (-4611686018427387905,3074457345618258602,1537228672809129299,(1,2305843009213693951),1),
        (-4611686018427387905,1,0,(1,0),1),
        (-4611686018427387905,9223372036854775806,4611686018427387901,(1,2305843009213693951),1),
        (-4611686018427387905,4611686018427387904,4611686018427387903,(1,4611686018427387903),1),
        (-4611686018427387905,4611686018427387902,4611686018427387899,(1,3074457345618258601),1),
        (-4611686018427387905,3074457345618258603,1537228672809129301,(1,3074457345618258601),1),
        (-4611686018427387905,3074457345618258601,1537228672809129297,(1,878416384462359600),1),
        (-4611686018427387905,998244353,266109198,(1,747371219),1),
        (-4611686018427387905,1000000007,854414004,(1,285692652),1),
        (-4611686018427387905,1000000009,77785888,(1,911988247),1),
        (4611686018427387904,9223372036854775807,4611686018427387904,(1,2),1),
        (4611686018427387904,4611686018427387903,1,(1,1),1),
        (4611686018427387904,4611686018427387903,1,(1,1),1),
        (4611686018427387904,3074457345618258602,1537228672809129302,(2,2),2),
        (4611686018427387904,3074457345618258602,1537228672809129302,(2,2),2),
        (4611686018427387904,1,0,(1,0),1),
        (4611686018427387904,9223372036854775806,4611686018427387904,(2,2),2),
        (4611686018427387904,4611686018427387904,0,(4611686018427387904,0),4611686018427387904),
        (4611686018427387904,4611686018427387902,2,(2,1),2),
        (4611686018427387904,3074457345618258603,1537228672809129301,(1,3074457345618258601),1),
        (4611686018427387904,3074457345618258601,1537228672809129303,(1,1844674407370955161),1),
        (4611686018427387904,998244353,732135154,(1,782544001),1),
        (4611686018427387904,1000000007,145586002,(1,72812873),1),
        (4611686018427387904,1000000009,922214120,(1,183083157),1),
        (4611686018427387902,9223372036854775807,4611686018427387902,(1,6148914691236517204),1),
        (4611686018427387902,4611686018427387903,4611686018427387902,(1,4611686018427387902),1),
        (4611686018427387902,4611686018427387903,4611686018427387902,(1,4611686018427387902),1),
        (4611686018427387902,3074457345618258602,1537228672809129300,(2,1537228672809129299),2),
        (4611686018427387902,3074457345618258602,1537228672809129300,(2,1537228672809129299),2),
        (4611686018427387902,1,0,(1,0),1),
        (4611686018427387902,9223372036854775806,4611686018427387902,(2,4611686018427387901),2),
        (4611686018427387902,4611686018427387904,4611686018427387902,(2,2305843009213693951),2),
        (4611686018427387902,4611686018427387902,0,(4611686018427387902,0),4611686018427387902),
        (4611686018427387902,3074457345618258603,1537228672809129299,(1,2459565876494606882),1),
        (4611686018427387902,3074457345618258601,1537228672809129301,(1,2),1),
        (4611686018427387902,998244353,732135152,(1,595046340),1),
        (4611686018427387902,1000000007,145586000,(1,964823939),1),
        (4611686018427387902,1000000009,922214118,(1,809815286),1),
        (-3074457345618258601,9223372036854775807,6148914691236517206,(1,6917529027641081856),1),
        (-3074457345618258601,4611686018427387903,1537228672809129302,(1,1537228672809129302),1),
        (-3074457345618258601,4611686018427387903,1537228672809129302,(1,1537228672809129302),1),
        (-3074457345618258601,3074457345618258602,1,(1,1),1),
        (-3074457345618258601,3074457345618258602,1,(1,1),1),
        (-3074457345618258601,1,0,(1,0),1),
        (-3074457345618258601,9223372036854775806,6148914691236517205,(1,6148914691236517205),1),
        (-3074457345618258601,4611686018427387904,1537228672809129303,(1,2767011611056432743),1),
        (-3074457345618258601,4611686018427387902,1537228672809129301,(1,3),1),
        (-3074457345618258601,3074457345618258603,2,(1,1537228672809129302),1),
        (-3074457345618258601,3074457345618258601,0,(3074457345618258601,0),3074457345618258601),
        (-3074457345618258601,998244353,510154252,(1,797790486),1),
        (-3074457345618258601,1000000007,902942674,(1,695493791),1),
        (-3074457345618258601,1000000009,51857261,(1,605754540),1),
        (-3074457345618258603,9223372036854775807,6148914691236517204,(1,4611686018427387902),1),
        (-3074457345618258603,4611686018427387903,1537228672809129300,(3,1537228672809129298),3),
        (-3074457345618258603,4611686018427387903,1537228672809129300,(3,1537228672809129298),3),
        (-3074457345618258603,3074457345618258602,3074457345618258601,(1,3074457345618258601),1),
        (-3074457345618258603,3074457345618258602,3074457345618258601,(1,3074457345618258601),1),
        (-3074457345618258603,1,0,(1,0),1),
        (-3074457345618258603,9223372036854775806,6148914691236517203,(3,3074457345618258599),3),
        (-3074457345618258603,4611686018427387904,1537228672809129301,(1,4611686018427387901),1),
        (-3074457345618258603,4611686018427387902,1537228672809129299,(1,3689348814741910321),1),
        (-3074457345618258603,3074457345618258603,0,(3074457345618258603,0),3074457345618258603),
        (-3074457345618258603,3074457345618258601,3074457345618258599,(1,1537228672809129300),1),
        (-3074457345618258603,998244353,510154250,(1,403496013),1),
        (-3074457345618258603,1000000007,902942672,(1,103819439),1),
        (-3074457345618258603,1000000009,51857259,(1,115381244),1),
        (3074457345618258603,9223372036854775807,3074457345618258603,(1,4611686018427387905),1),
        (3074457345618258603,4611686018427387903,3074457345618258603,(3,3),3),
        (3074457345618258603,4611686018427387903,3074457345618258603,(3,3),3),
        (3074457345618258603,3074457345618258602,1,(1,1),1),
        (3074457345618258603,3074457345618258602,1,(1,1),1),
        (3074457345618258603,1,0,(1,0),1),
        (3074457345618258603,9223372036854775806,3074457345618258603,(3,3),3),
        (3074457345618258603,4611686018427387904,3074457345618258603,(1,3),1),
        (3074457345618258603,4611686018427387902,3074457345618258603,(1,922337203685477581),1),
        (3074457345618258603,3074457345618258603,0,(3074457345618258603,0),3074457345618258603),
        (3074457345618258603,3074457345618258601,2,(1,1537228672809129301),1),
        (3074457345618258603,998244353,488090103,(1,594748340),1),
        (3074457345618258603,1000000007,97057335,(1,896180568),1),
        (3074457345618258603,1000000009,948142750,(1,884618765),1),
        (3074457345618258601,9223372036854775807,3074457345618258601,(1,2305843009213693951),1),
        (3074457345618258601,4611686018427387903,3074457345618258601,(1,3074457345618258601),1),
        (3074457345618258601,4611686018427387903,3074457345618258601,(1,3074457345618258601),1),
        (3074457345618258601,3074457345618258602,3074457345618258601,(1,3074457345618258601),1),
        (3074457345618258601,3074457345618258602,3074457345618258601,(1,3074457345618258601),1),
        (3074457345618258601,1,0,(1,0),1),
        (3074457345618258601,9223372036854775806,3074457345618258601,(1,3074457345618258601),1),
        (3074457345618258601,4611686018427387904,3074457345618258601,(1,1844674407370955161),1),
        (3074457345618258601,4611686018427387902,3074457345618258601,(1,4611686018427387899),1),
        (3074457345618258601,3074457345618258603,3074457345618258601,(1,1537228672809129301),1),
        (3074457345618258601,3074457345618258601,0,(3074457345618258601,0),3074457345618258601),
        (3074457345618258601,998244353,488090101,(1,200453867),1),
        (3074457345618258601,1000000007,97057333,(1,304506216),1),
        (3074457345618258601,1000000009,948142748,(1,394245469),1),
        (998244353,9223372036854775807,998244353,(1,2044571593573628540),1),
        (998244353,4611686018427387903,998244353,(1,1378972662767116130),1),
        (998244353,4611686018427387903,998244353,(1,1378972662767116130),1),
        (998244353,3074457345618258602,998244353,(1,2916201335576245431),1),
        (998244353,3074457345618258602,998244353,(1,2916201335576245431),1),
        (998244353,1,0,(1,0),1),
        (998244353,9223372036854775806,998244353,(1,5990658681194504033),1),
        (998244353,4611686018427387904,998244353,(1,996491785301655553),1),
        (998244353,4611686018427387902,998244353,(1,1862692870359572359),1),
        (998244353,3074457345618258603,998244353,(1,1242713046527527280),1),
        (998244353,3074457345618258601,998244353,(1,2457086596659225479),1),
        (998244353,998244353,0,(998244353,0),998244353),
        (998244353,1000000007,998244353,(1,4924091),1),
        (998244353,1000000009,998244353,(1,740870086),1),
        (1000000007,9223372036854775807,1000000007,(1,616696887617212954),1),
        (1000000007,4611686018427387903,1000000007,(1,656674200701941223),1),
        (1000000007,4611686018427387903,1000000007,(1,656674200701941223),1),
        (1000000007,3074457345618258602,1000000007,(1,656674200701941223),1),
        (1000000007,3074457345618258602,1000000007,(1,656674200701941223),1),
        (1000000007,1,0,(1,0),1),
        (1000000007,9223372036854775806,1000000007,(1,656674200701941223),1),
        (1000000007,4611686018427387904,1000000007,(1,4275895912402289591),1),
        (1000000007,4611686018427387902,1000000007,(1,162220979843304191),1),
        (1000000007,3074457345618258603,1000000007,(1,319188434617197674),1),
        (1000000007,3074457345618258601,1000000007,(1,2138265979603978056),1),
        (1000000007,998244353,1755654,(1,993328907),1),
        (1000000007,1000000007,0,(1000000007,0),1000000007),
        (1000000007,1000000009,1000000007,(1,500000004),1),
        (1000000009,9223372036854775807,1000000009,(1,4804532415920688508),1),
        (1000000009,4611686018427387903,1000000009,(1,2760933337918885219),1),
        (1000000009,4611686018427387903,1000000009,(1,2760933337918885219),1),
        (1000000009,3074457345618258602,1000000009,(1,2760933337918885219),1),
        (1000000009,3074457345618258602,1000000009,(1,2760933337918885219),1),
        (1000000009,1,0,(1,0),1),
        (1000000009,9223372036854775806,1000000009,(1,2760933337918885219),1),
        (1000000009,4611686018427387904,1000000009,(1,3767363990679839801),1),
        (1000000009,4611686018427387902,1000000009,(1,877072220083935683),1),
        (1000000009,3074457345618258603,1000000009,(1,354734709969760237),1),
        (1000000009,3074457345618258601,1000000009,(1,1862366478383310949),1),
        (1000000009,998244353,1755656,(1,258674980),1),
        (1000000009,1000000007,2,(1,500000004),1),
        (1000000009,1000000009,0,(1000000009,0),1000000009),
        (-998244353,9223372036854775807,9223372035856531454,(1,7178800443281147267),1),
        (-998244353,4611686018427387903,4611686017429143550,(1,3232713355660271773),1),
        (-998244353,4611686018427387903,4611686017429143550,(1,3232713355660271773),1),
        (-998244353,3074457345618258602,3074457344620014249,(1,158256010042013171),1),
        (-998244353,3074457345618258602,3074457344620014249,(1,158256010042013171),1),
        (-998244353,1,0,(1,0),1),
        (-998244353,9223372036854775806,9223372035856531453,(1,3232713355660271773),1),
        (-998244353,4611686018427387904,4611686017429143551,(1,3615194233125732351),1),
        (-998244353,4611686018427387902,4611686017429143549,(1,2748993148067815543),1),
        (-998244353,3074457345618258603,3074457344620014250,(1,1831744299090731323),1),
        (-998244353,3074457345618258601,3074457344620014248,(1,617370748959033122),1),
        (-998244353,998244353,0,(998244353,0),998244353),
        (-998244353,1000000007,1755654,(1,995075916),1),
        (-998244353,1000000009,1755656,(1,259129923),1),
        (-1000000007,9223372036854775807,9223372035854775800,(1,8606675149237562853),1),
        (-1000000007,4611686018427387903,4611686017427387896,(1,3955011817725446680),1),
        (-1000000007,4611686018427387903,4611686017427387896,(1,3955011817725446680),1),
        (-1000000007,3074457345618258602,3074457344618258595,(1,2417783144916317379),1),
        (-1000000007,3074457345618258602,3074457344618258595,(1,2417783144916317379),1),
        (-1000000007,1,0,(1,0),1),
        (-1000000007,9223372036854775806,9223372035854775799,(1,8566697836152834583),1),
        (-1000000007,4611686018427387904,4611686017427387897,(1,335790106025098313),1),
        (-1000000007,4611686018427387902,4611686017427387895,(1,4449465038584083711),1),
        (-1000000007,3074457345618258603,3074457344618258596,(1,2755268911001060929),1),
        (-1000000007,3074457345618258601,3074457344618258594,(1,936191366014280545),1),
        (-1000000007,998244353,996488699,(1,4915446),1),
        (-1000000007,1000000007,0,(1000000007,0),1000000007),
        (-1000000007,1000000009,2,(1,500000005),1),
        (-1000000009,9223372036854775807,9223372035854775798,(1,4418839620934087299),1),
        (-1000000009,4611686018427387903,4611686017427387894,(1,1850752680508502684),1),
        (-1000000009,4611686018427387903,4611686017427387894,(1,1850752680508502684),1),
        (-1000000009,3074457345618258602,3074457344618258593,(1,313524007699373383),1),
        (-1000000009,3074457345618258602,3074457344618258593,(1,313524007699373383),1),
        (-1000000009,1,0,(1,0),1),
        (-1000000009,9223372036854775806,9223372035854775797,(1,6462438698935890587),1),
        (-1000000009,4611686018427387904,4611686017427387895,(1,844322027747548103),1),
        (-1000000009,4611686018427387902,4611686017427387893,(1,3734613798343452219),1),
        (-1000000009,3074457345618258603,3074457344618258594,(1,2719722635648498366),1),
        (-1000000009,3074457345618258601,3074457344618258592,(1,1212090867234947652),1),
        (-1000000009,998244353,996488697,(1,739569373),1),
        (-1000000009,1000000007,1000000005,(1,500000003),1),
        (-1000000009,1000000009,0,(1000000009,0),1000000009),
        ]
        
        for (a,b,a2,eg,g) in ab {
            let _eg = _internal.inv_gcd(a, b)
            XCTAssertEqual(a2,_internal.safe_mod(a, b));
            XCTAssertEqual(eg.0,_eg.0);
            XCTAssertEqual(eg.1,_eg.1);
            XCTAssertEqual(g, gcd(a2, b));
        }
    }
    
    func testPrimitiveRootTestNaive() throws {
//        for (int m = 2; m <= 10000; m++) {
        for m in CInt(2)..<=10000 {
            if (!_internal.is_prime_constexpr(m)) { continue; }
            let n = _internal.primitive_root_constexpr(m);
            XCTAssertLessThanOrEqual(1, n);
            XCTAssertLessThan(n, m);
            var x: CInt = 1;
//            for (int i = 1; i <= m - 2; i++) {
            for _ in 1..<=(m - 2) {
                x = CInt(CLongLong(x)*CLongLong(n) % CLongLong(m));
                // x == n^i
                XCTAssertNotEqual(1, x);
            }
            x = CInt(CLongLong(x)*CLongLong(n) % CLongLong(m));
            XCTAssertEqual(1, x);
        }
    }
    
    func testPrimitiveRootTemplateTest() throws {
        
        XCTAssertTrue(is_primitive_root(2, (_internal.primitive_root(2))));
        XCTAssertTrue(is_primitive_root(3, (_internal.primitive_root(3))));
        XCTAssertTrue(is_primitive_root(5, (_internal.primitive_root(5))));
        XCTAssertTrue(is_primitive_root(7, (_internal.primitive_root(7))));
        XCTAssertTrue(is_primitive_root(11, (_internal.primitive_root(11))));
        XCTAssertTrue(is_primitive_root(998244353, (_internal.primitive_root(998244353))));
        XCTAssertTrue(is_primitive_root(1000000007, (_internal.primitive_root(1000000007))));

        XCTAssertTrue(is_primitive_root(469762049, (_internal.primitive_root(469762049))));
        XCTAssertTrue(is_primitive_root(167772161, (_internal.primitive_root(167772161))));
        XCTAssertTrue(is_primitive_root(754974721, (_internal.primitive_root(754974721))));
        XCTAssertTrue(is_primitive_root(324013369, (_internal.primitive_root(324013369))));
        XCTAssertTrue(is_primitive_root(831143041, (_internal.primitive_root(831143041))));
        XCTAssertTrue(is_primitive_root(1685283601, (_internal.primitive_root(1685283601))));
    }
    
    func testPrimitiveRootTest() throws {
//        for (int i = 0; i < 1000; i++) {
        for i in CInt(0)..<1000 {
            let x = CInt.max - i
            if (!_internal.is_prime_constexpr(x)) { continue; }
            XCTAssertTrue(
                is_primitive_root(x, (_internal.primitive_root_constexpr(x))));
        }
    }
    
    func testPerformanceExample() throws {
        // This is an example of a performance test case.
        self.measure {
            // Put the code you want to measure the time of here.
        }
    }

}
