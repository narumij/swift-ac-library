import BigInt
import Numerics
import XCTest

#if DEBUG
  @testable import AtCoder
#else
  import AtCoder
#endif

private func is_prime_naive(_ n: Int) -> Bool {
  assert(0 <= n && n <= ll(CInt.max))
  if n == 0 || n == 1 { return false }
  do {
    var i: Int = 2
    while i &* i <= n {
      defer { i += 1 }
      if n % i == 0 { return false }
    }
  }
  return true
}

final class internalMathTests: XCTestCase {

  #if DEBUG
    func testBarrett() throws {
      //        for (int m = 1; m <= 100; m++) {
      for m in 1 ..<= 100 {
        let bt = barrett(UInt(m))
        //            for (int a = 0; a < m; a++) {
        for a in 0..<m {
          //                for (int b = 0; b < m; b++) {
          for b in 0..<m {
            XCTAssertEqual((a * b) % m, Int(bt.mul(UInt(a), UInt(b))))
          }
        }
      }

      let bt = barrett(1)
      XCTAssertEqual(0 as UInt, bt.mul(0, 0))
    }

    func testBarrettCIntBorder() throws {
      let mod_upper = CUnsignedInt(CInt.max)

      //        for (unsigned int mod = mod_upper; mod >= mod_upper - 20; mod--) {
      for mod in stride(from: mod_upper, through: mod_upper - 20, by: -1) {
        let bt = barrett(UInt32(mod))
        var v: [CUnsignedInt] = []
        //            for (int i = 0; i < 10; i++) {
        for i in CUnsignedInt(0)..<CUnsignedInt(10) {
          v.append(i)
          v.append(mod - i)
          v.append(mod / 2 + i)
          v.append(mod / 2 - i)
        }

        for a in v {
          let a2 = ll(a)
          XCTAssertEqual(((a2 &* a2) % ll(mod) &* a2) % ll(mod), ll(bt.mul(a, bt.mul(a, a))))
          for b in v {
            let b2 = ll(b)
            XCTAssertEqual((a2 * b2) % ll(mod), ll(bt.mul(UInt32(a), UInt32(b))))
          }
        }
      }
    }

    func testBarrettCUnsignedIntBorder() throws {

      //        throw XCTSkip()

      let mod_upper = CUnsignedInt.max
      //        for (unsigned int mod = mod_upper; mod >= mod_upper - 20; mod--) {
      for mod in stride(from: mod_upper, through: mod_upper - 20, by: -1) {
        let bt = barrett(mod)
        var v: [CUnsignedInt] = []
        //            for (int i = 0; i < 10; i++) {
        for i in CUnsignedInt(0)..<CUnsignedInt(10) {
          v.append(i)
          v.append(mod - i)
          v.append(mod / 2 + i)
          v.append(mod / 2 - i)
        }
        for a in v {
          let a2 = ull(a)
          XCTAssertEqual(((a2 &* a2) % ull(mod) &* a2) % ull(mod), ull(bt.mul(a, bt.mul(a, a))))
          for b in v {
            let b2 = ull(b)
            XCTAssertEqual((a2 &* b2) % ull(mod), ull(bt.mul(a, b)))
          }
        }
      }
    }

    func testIsPrime() throws {

      XCTAssertFalse(_Internal.is_prime(121))
      XCTAssertFalse(_Internal.is_prime(11 * 13))
      XCTAssertTrue(_Internal.is_prime(1_000_000_007))
      XCTAssertFalse(_Internal.is_prime(1_000_000_008))
      XCTAssertTrue(_Internal.is_prime(1_000_000_009))
      //        for (int i = 0; i <= 10000; i++) {
      for i in 0 ..<= 10000 {
        XCTAssertEqual(is_prime_naive(i), _Internal.is_prime_constexpr(Int(i)))
      }
      //        for (int i = 0; i <= 10000; i++) {
      for i in 0 ..<= 10000 {
        let x = Int(CInt.max) - i
        XCTAssertEqual(is_prime_naive(x), _Internal.is_prime_constexpr(Int(x)))
      }
    }

    #if false
      func testSafeMod() throws {

        throw XCTSkip("__int128はSwiftでは利用できないため")

        /*
         std::vector<ll> preds;
         for (int i = 0; i <= 100; i++) {
             preds.push_back(i);
             preds.push_back(-i);
             preds.push_back(i);
             preds.push_back(std::numeric_limits<ll>::min() + i);
             preds.push_back(std::numeric_limits<ll>::max() - i);
         }
        
         for (auto a : preds) {
             for (auto b : preds) {
                 if (b <= 0) continue;
                 ll ans = (ll)((__int128(a) % b + b) % b);
                 ASSERT_EQ(ans, internal::safe_mod(a, b));
             }
         }
         */
      }
    #endif

    func testSafeModAlt() throws {
      let ab: [(a: ll, b: ll, ans: ll)] = [
        (0, 9_223_372_036_854_775_807, 0),
        (0, 1, 0),
        (0, 1, 0),
        (0, 9_223_372_036_854_775_806, 0),
        (0, 2, 0),
        (0, 2, 0),
        (0, 9_223_372_036_854_775_805, 0),
        (0, 3, 0),
        (0, 3, 0),
        (0, 9_223_372_036_854_775_804, 0),
        (0, 4, 0),
        (0, 4, 0),
        (0, 9_223_372_036_854_775_803, 0),
        (0, 5, 0),
        (0, 5, 0),
        (0, 9_223_372_036_854_775_802, 0),
        (0, 9_223_372_036_854_775_807, 0),
        (0, 1, 0),
        (0, 1, 0),
        (0, 9_223_372_036_854_775_806, 0),
        (0, 2, 0),
        (0, 2, 0),
        (0, 9_223_372_036_854_775_805, 0),
        (0, 3, 0),
        (0, 3, 0),
        (0, 9_223_372_036_854_775_804, 0),
        (0, 4, 0),
        (0, 4, 0),
        (0, 9_223_372_036_854_775_803, 0),
        (0, 5, 0),
        (0, 5, 0),
        (0, 9_223_372_036_854_775_802, 0),
        (0, 9_223_372_036_854_775_807, 0),
        (0, 1, 0),
        (0, 1, 0),
        (0, 9_223_372_036_854_775_806, 0),
        (0, 2, 0),
        (0, 2, 0),
        (0, 9_223_372_036_854_775_805, 0),
        (0, 3, 0),
        (0, 3, 0),
        (0, 9_223_372_036_854_775_804, 0),
        (0, 4, 0),
        (0, 4, 0),
        (0, 9_223_372_036_854_775_803, 0),
        (0, 5, 0),
        (0, 5, 0),
        (0, 9_223_372_036_854_775_802, 0),
        (-9_223_372_036_854_775_808, 9_223_372_036_854_775_807, 9_223_372_036_854_775_806),
        (-9_223_372_036_854_775_808, 1, 0),
        (-9_223_372_036_854_775_808, 1, 0),
        (-9_223_372_036_854_775_808, 9_223_372_036_854_775_806, 9_223_372_036_854_775_804),
        (-9_223_372_036_854_775_808, 2, 0),
        (-9_223_372_036_854_775_808, 2, 0),
        (-9_223_372_036_854_775_808, 9_223_372_036_854_775_805, 9_223_372_036_854_775_802),
        (-9_223_372_036_854_775_808, 3, 1),
        (-9_223_372_036_854_775_808, 3, 1),
        (-9_223_372_036_854_775_808, 9_223_372_036_854_775_804, 9_223_372_036_854_775_800),
        (-9_223_372_036_854_775_808, 4, 0),
        (-9_223_372_036_854_775_808, 4, 0),
        (-9_223_372_036_854_775_808, 9_223_372_036_854_775_803, 9_223_372_036_854_775_798),
        (-9_223_372_036_854_775_808, 5, 2),
        (-9_223_372_036_854_775_808, 5, 2),
        (-9_223_372_036_854_775_808, 9_223_372_036_854_775_802, 9_223_372_036_854_775_796),
        (9_223_372_036_854_775_807, 9_223_372_036_854_775_807, 0),
        (9_223_372_036_854_775_807, 1, 0),
        (9_223_372_036_854_775_807, 1, 0),
        (9_223_372_036_854_775_807, 9_223_372_036_854_775_806, 1),
        (9_223_372_036_854_775_807, 2, 1),
        (9_223_372_036_854_775_807, 2, 1),
        (9_223_372_036_854_775_807, 9_223_372_036_854_775_805, 2),
        (9_223_372_036_854_775_807, 3, 1),
        (9_223_372_036_854_775_807, 3, 1),
        (9_223_372_036_854_775_807, 9_223_372_036_854_775_804, 3),
        (9_223_372_036_854_775_807, 4, 3),
        (9_223_372_036_854_775_807, 4, 3),
        (9_223_372_036_854_775_807, 9_223_372_036_854_775_803, 4),
        (9_223_372_036_854_775_807, 5, 2),
        (9_223_372_036_854_775_807, 5, 2),
        (9_223_372_036_854_775_807, 9_223_372_036_854_775_802, 5),
        (1, 9_223_372_036_854_775_807, 1),
        (1, 1, 0),
        (1, 1, 0),
        (1, 9_223_372_036_854_775_806, 1),
        (1, 2, 1),
        (1, 2, 1),
        (1, 9_223_372_036_854_775_805, 1),
        (1, 3, 1),
        (1, 3, 1),
        (1, 9_223_372_036_854_775_804, 1),
        (1, 4, 1),
        (1, 4, 1),
        (1, 9_223_372_036_854_775_803, 1),
        (1, 5, 1),
        (1, 5, 1),
        (1, 9_223_372_036_854_775_802, 1),
        (-1, 9_223_372_036_854_775_807, 9_223_372_036_854_775_806),
        (-1, 1, 0),
        (-1, 1, 0),
        (-1, 9_223_372_036_854_775_806, 9_223_372_036_854_775_805),
        (-1, 2, 1),
        (-1, 2, 1),
        (-1, 9_223_372_036_854_775_805, 9_223_372_036_854_775_804),
        (-1, 3, 2),
        (-1, 3, 2),
        (-1, 9_223_372_036_854_775_804, 9_223_372_036_854_775_803),
        (-1, 4, 3),
        (-1, 4, 3),
        (-1, 9_223_372_036_854_775_803, 9_223_372_036_854_775_802),
        (-1, 5, 4),
        (-1, 5, 4),
        (-1, 9_223_372_036_854_775_802, 9_223_372_036_854_775_801),
        (1, 9_223_372_036_854_775_807, 1),
        (1, 1, 0),
        (1, 1, 0),
        (1, 9_223_372_036_854_775_806, 1),
        (1, 2, 1),
        (1, 2, 1),
        (1, 9_223_372_036_854_775_805, 1),
        (1, 3, 1),
        (1, 3, 1),
        (1, 9_223_372_036_854_775_804, 1),
        (1, 4, 1),
        (1, 4, 1),
        (1, 9_223_372_036_854_775_803, 1),
        (1, 5, 1),
        (1, 5, 1),
        (1, 9_223_372_036_854_775_802, 1),
        (-9_223_372_036_854_775_807, 9_223_372_036_854_775_807, 0),
        (-9_223_372_036_854_775_807, 1, 0),
        (-9_223_372_036_854_775_807, 1, 0),
        (-9_223_372_036_854_775_807, 9_223_372_036_854_775_806, 9_223_372_036_854_775_805),
        (-9_223_372_036_854_775_807, 2, 1),
        (-9_223_372_036_854_775_807, 2, 1),
        (-9_223_372_036_854_775_807, 9_223_372_036_854_775_805, 9_223_372_036_854_775_803),
        (-9_223_372_036_854_775_807, 3, 2),
        (-9_223_372_036_854_775_807, 3, 2),
        (-9_223_372_036_854_775_807, 9_223_372_036_854_775_804, 9_223_372_036_854_775_801),
        (-9_223_372_036_854_775_807, 4, 1),
        (-9_223_372_036_854_775_807, 4, 1),
        (-9_223_372_036_854_775_807, 9_223_372_036_854_775_803, 9_223_372_036_854_775_799),
        (-9_223_372_036_854_775_807, 5, 3),
        (-9_223_372_036_854_775_807, 5, 3),
        (-9_223_372_036_854_775_807, 9_223_372_036_854_775_802, 9_223_372_036_854_775_797),
        (9_223_372_036_854_775_806, 9_223_372_036_854_775_807, 9_223_372_036_854_775_806),
        (9_223_372_036_854_775_806, 1, 0),
        (9_223_372_036_854_775_806, 1, 0),
        (9_223_372_036_854_775_806, 9_223_372_036_854_775_806, 0),
        (9_223_372_036_854_775_806, 2, 0),
        (9_223_372_036_854_775_806, 2, 0),
        (9_223_372_036_854_775_806, 9_223_372_036_854_775_805, 1),
        (9_223_372_036_854_775_806, 3, 0),
        (9_223_372_036_854_775_806, 3, 0),
        (9_223_372_036_854_775_806, 9_223_372_036_854_775_804, 2),
        (9_223_372_036_854_775_806, 4, 2),
        (9_223_372_036_854_775_806, 4, 2),
        (9_223_372_036_854_775_806, 9_223_372_036_854_775_803, 3),
        (9_223_372_036_854_775_806, 5, 1),
        (9_223_372_036_854_775_806, 5, 1),
        (9_223_372_036_854_775_806, 9_223_372_036_854_775_802, 4),
        (2, 9_223_372_036_854_775_807, 2),
        (2, 1, 0),
        (2, 1, 0),
        (2, 9_223_372_036_854_775_806, 2),
        (2, 2, 0),
        (2, 2, 0),
        (2, 9_223_372_036_854_775_805, 2),
        (2, 3, 2),
        (2, 3, 2),
        (2, 9_223_372_036_854_775_804, 2),
        (2, 4, 2),
        (2, 4, 2),
        (2, 9_223_372_036_854_775_803, 2),
        (2, 5, 2),
        (2, 5, 2),
        (2, 9_223_372_036_854_775_802, 2),
        (-2, 9_223_372_036_854_775_807, 9_223_372_036_854_775_805),
        (-2, 1, 0),
        (-2, 1, 0),
        (-2, 9_223_372_036_854_775_806, 9_223_372_036_854_775_804),
        (-2, 2, 0),
        (-2, 2, 0),
        (-2, 9_223_372_036_854_775_805, 9_223_372_036_854_775_803),
        (-2, 3, 1),
        (-2, 3, 1),
        (-2, 9_223_372_036_854_775_804, 9_223_372_036_854_775_802),
        (-2, 4, 2),
        (-2, 4, 2),
        (-2, 9_223_372_036_854_775_803, 9_223_372_036_854_775_801),
        (-2, 5, 3),
        (-2, 5, 3),
        (-2, 9_223_372_036_854_775_802, 9_223_372_036_854_775_800),
        (2, 9_223_372_036_854_775_807, 2),
        (2, 1, 0),
        (2, 1, 0),
        (2, 9_223_372_036_854_775_806, 2),
        (2, 2, 0),
        (2, 2, 0),
        (2, 9_223_372_036_854_775_805, 2),
        (2, 3, 2),
        (2, 3, 2),
        (2, 9_223_372_036_854_775_804, 2),
        (2, 4, 2),
        (2, 4, 2),
        (2, 9_223_372_036_854_775_803, 2),
        (2, 5, 2),
        (2, 5, 2),
        (2, 9_223_372_036_854_775_802, 2),
        (-9_223_372_036_854_775_806, 9_223_372_036_854_775_807, 1),
        (-9_223_372_036_854_775_806, 1, 0),
        (-9_223_372_036_854_775_806, 1, 0),
        (-9_223_372_036_854_775_806, 9_223_372_036_854_775_806, 0),
        (-9_223_372_036_854_775_806, 2, 0),
        (-9_223_372_036_854_775_806, 2, 0),
        (-9_223_372_036_854_775_806, 9_223_372_036_854_775_805, 9_223_372_036_854_775_804),
        (-9_223_372_036_854_775_806, 3, 0),
        (-9_223_372_036_854_775_806, 3, 0),
        (-9_223_372_036_854_775_806, 9_223_372_036_854_775_804, 9_223_372_036_854_775_802),
        (-9_223_372_036_854_775_806, 4, 2),
        (-9_223_372_036_854_775_806, 4, 2),
        (-9_223_372_036_854_775_806, 9_223_372_036_854_775_803, 9_223_372_036_854_775_800),
        (-9_223_372_036_854_775_806, 5, 4),
        (-9_223_372_036_854_775_806, 5, 4),
        (-9_223_372_036_854_775_806, 9_223_372_036_854_775_802, 9_223_372_036_854_775_798),
        (9_223_372_036_854_775_805, 9_223_372_036_854_775_807, 9_223_372_036_854_775_805),
        (9_223_372_036_854_775_805, 1, 0),
        (9_223_372_036_854_775_805, 1, 0),
        (9_223_372_036_854_775_805, 9_223_372_036_854_775_806, 9_223_372_036_854_775_805),
        (9_223_372_036_854_775_805, 2, 1),
        (9_223_372_036_854_775_805, 2, 1),
        (9_223_372_036_854_775_805, 9_223_372_036_854_775_805, 0),
        (9_223_372_036_854_775_805, 3, 2),
        (9_223_372_036_854_775_805, 3, 2),
        (9_223_372_036_854_775_805, 9_223_372_036_854_775_804, 1),
        (9_223_372_036_854_775_805, 4, 1),
        (9_223_372_036_854_775_805, 4, 1),
        (9_223_372_036_854_775_805, 9_223_372_036_854_775_803, 2),
        (9_223_372_036_854_775_805, 5, 0),
        (9_223_372_036_854_775_805, 5, 0),
        (9_223_372_036_854_775_805, 9_223_372_036_854_775_802, 3),
        (3, 9_223_372_036_854_775_807, 3),
        (3, 1, 0),
        (3, 1, 0),
        (3, 9_223_372_036_854_775_806, 3),
        (3, 2, 1),
        (3, 2, 1),
        (3, 9_223_372_036_854_775_805, 3),
        (3, 3, 0),
        (3, 3, 0),
        (3, 9_223_372_036_854_775_804, 3),
        (3, 4, 3),
        (3, 4, 3),
        (3, 9_223_372_036_854_775_803, 3),
        (3, 5, 3),
        (3, 5, 3),
        (3, 9_223_372_036_854_775_802, 3),
        (-3, 9_223_372_036_854_775_807, 9_223_372_036_854_775_804),
        (-3, 1, 0),
        (-3, 1, 0),
        (-3, 9_223_372_036_854_775_806, 9_223_372_036_854_775_803),
        (-3, 2, 1),
        (-3, 2, 1),
        (-3, 9_223_372_036_854_775_805, 9_223_372_036_854_775_802),
        (-3, 3, 0),
        (-3, 3, 0),
        (-3, 9_223_372_036_854_775_804, 9_223_372_036_854_775_801),
        (-3, 4, 1),
        (-3, 4, 1),
        (-3, 9_223_372_036_854_775_803, 9_223_372_036_854_775_800),
        (-3, 5, 2),
        (-3, 5, 2),
        (-3, 9_223_372_036_854_775_802, 9_223_372_036_854_775_799),
        (3, 9_223_372_036_854_775_807, 3),
        (3, 1, 0),
        (3, 1, 0),
        (3, 9_223_372_036_854_775_806, 3),
        (3, 2, 1),
        (3, 2, 1),
        (3, 9_223_372_036_854_775_805, 3),
        (3, 3, 0),
        (3, 3, 0),
        (3, 9_223_372_036_854_775_804, 3),
        (3, 4, 3),
        (3, 4, 3),
        (3, 9_223_372_036_854_775_803, 3),
        (3, 5, 3),
        (3, 5, 3),
        (3, 9_223_372_036_854_775_802, 3),
        (-9_223_372_036_854_775_805, 9_223_372_036_854_775_807, 2),
        (-9_223_372_036_854_775_805, 1, 0),
        (-9_223_372_036_854_775_805, 1, 0),
        (-9_223_372_036_854_775_805, 9_223_372_036_854_775_806, 1),
        (-9_223_372_036_854_775_805, 2, 1),
        (-9_223_372_036_854_775_805, 2, 1),
        (-9_223_372_036_854_775_805, 9_223_372_036_854_775_805, 0),
        (-9_223_372_036_854_775_805, 3, 1),
        (-9_223_372_036_854_775_805, 3, 1),
        (-9_223_372_036_854_775_805, 9_223_372_036_854_775_804, 9_223_372_036_854_775_803),
        (-9_223_372_036_854_775_805, 4, 3),
        (-9_223_372_036_854_775_805, 4, 3),
        (-9_223_372_036_854_775_805, 9_223_372_036_854_775_803, 9_223_372_036_854_775_801),
        (-9_223_372_036_854_775_805, 5, 0),
        (-9_223_372_036_854_775_805, 5, 0),
        (-9_223_372_036_854_775_805, 9_223_372_036_854_775_802, 9_223_372_036_854_775_799),
        (9_223_372_036_854_775_804, 9_223_372_036_854_775_807, 9_223_372_036_854_775_804),
        (9_223_372_036_854_775_804, 1, 0),
        (9_223_372_036_854_775_804, 1, 0),
        (9_223_372_036_854_775_804, 9_223_372_036_854_775_806, 9_223_372_036_854_775_804),
        (9_223_372_036_854_775_804, 2, 0),
        (9_223_372_036_854_775_804, 2, 0),
        (9_223_372_036_854_775_804, 9_223_372_036_854_775_805, 9_223_372_036_854_775_804),
        (9_223_372_036_854_775_804, 3, 1),
        (9_223_372_036_854_775_804, 3, 1),
        (9_223_372_036_854_775_804, 9_223_372_036_854_775_804, 0),
        (9_223_372_036_854_775_804, 4, 0),
        (9_223_372_036_854_775_804, 4, 0),
        (9_223_372_036_854_775_804, 9_223_372_036_854_775_803, 1),
        (9_223_372_036_854_775_804, 5, 4),
        (9_223_372_036_854_775_804, 5, 4),
        (9_223_372_036_854_775_804, 9_223_372_036_854_775_802, 2),
        (4, 9_223_372_036_854_775_807, 4),
        (4, 1, 0),
        (4, 1, 0),
        (4, 9_223_372_036_854_775_806, 4),
        (4, 2, 0),
        (4, 2, 0),
        (4, 9_223_372_036_854_775_805, 4),
        (4, 3, 1),
        (4, 3, 1),
        (4, 9_223_372_036_854_775_804, 4),
        (4, 4, 0),
        (4, 4, 0),
        (4, 9_223_372_036_854_775_803, 4),
        (4, 5, 4),
        (4, 5, 4),
        (4, 9_223_372_036_854_775_802, 4),
        (-4, 9_223_372_036_854_775_807, 9_223_372_036_854_775_803),
        (-4, 1, 0),
        (-4, 1, 0),
        (-4, 9_223_372_036_854_775_806, 9_223_372_036_854_775_802),
        (-4, 2, 0),
        (-4, 2, 0),
        (-4, 9_223_372_036_854_775_805, 9_223_372_036_854_775_801),
        (-4, 3, 2),
        (-4, 3, 2),
        (-4, 9_223_372_036_854_775_804, 9_223_372_036_854_775_800),
        (-4, 4, 0),
        (-4, 4, 0),
        (-4, 9_223_372_036_854_775_803, 9_223_372_036_854_775_799),
        (-4, 5, 1),
        (-4, 5, 1),
        (-4, 9_223_372_036_854_775_802, 9_223_372_036_854_775_798),
        (4, 9_223_372_036_854_775_807, 4),
        (4, 1, 0),
        (4, 1, 0),
        (4, 9_223_372_036_854_775_806, 4),
        (4, 2, 0),
        (4, 2, 0),
        (4, 9_223_372_036_854_775_805, 4),
        (4, 3, 1),
        (4, 3, 1),
        (4, 9_223_372_036_854_775_804, 4),
        (4, 4, 0),
        (4, 4, 0),
        (4, 9_223_372_036_854_775_803, 4),
        (4, 5, 4),
        (4, 5, 4),
        (4, 9_223_372_036_854_775_802, 4),
        (-9_223_372_036_854_775_804, 9_223_372_036_854_775_807, 3),
        (-9_223_372_036_854_775_804, 1, 0),
        (-9_223_372_036_854_775_804, 1, 0),
        (-9_223_372_036_854_775_804, 9_223_372_036_854_775_806, 2),
        (-9_223_372_036_854_775_804, 2, 0),
        (-9_223_372_036_854_775_804, 2, 0),
        (-9_223_372_036_854_775_804, 9_223_372_036_854_775_805, 1),
        (-9_223_372_036_854_775_804, 3, 2),
        (-9_223_372_036_854_775_804, 3, 2),
        (-9_223_372_036_854_775_804, 9_223_372_036_854_775_804, 0),
        (-9_223_372_036_854_775_804, 4, 0),
        (-9_223_372_036_854_775_804, 4, 0),
        (-9_223_372_036_854_775_804, 9_223_372_036_854_775_803, 9_223_372_036_854_775_802),
        (-9_223_372_036_854_775_804, 5, 1),
        (-9_223_372_036_854_775_804, 5, 1),
        (-9_223_372_036_854_775_804, 9_223_372_036_854_775_802, 9_223_372_036_854_775_800),
        (9_223_372_036_854_775_803, 9_223_372_036_854_775_807, 9_223_372_036_854_775_803),
        (9_223_372_036_854_775_803, 1, 0),
        (9_223_372_036_854_775_803, 1, 0),
        (9_223_372_036_854_775_803, 9_223_372_036_854_775_806, 9_223_372_036_854_775_803),
        (9_223_372_036_854_775_803, 2, 1),
        (9_223_372_036_854_775_803, 2, 1),
        (9_223_372_036_854_775_803, 9_223_372_036_854_775_805, 9_223_372_036_854_775_803),
        (9_223_372_036_854_775_803, 3, 0),
        (9_223_372_036_854_775_803, 3, 0),
        (9_223_372_036_854_775_803, 9_223_372_036_854_775_804, 9_223_372_036_854_775_803),
        (9_223_372_036_854_775_803, 4, 3),
        (9_223_372_036_854_775_803, 4, 3),
        (9_223_372_036_854_775_803, 9_223_372_036_854_775_803, 0),
        (9_223_372_036_854_775_803, 5, 3),
        (9_223_372_036_854_775_803, 5, 3),
        (9_223_372_036_854_775_803, 9_223_372_036_854_775_802, 1),
        (5, 9_223_372_036_854_775_807, 5),
        (5, 1, 0),
        (5, 1, 0),
        (5, 9_223_372_036_854_775_806, 5),
        (5, 2, 1),
        (5, 2, 1),
        (5, 9_223_372_036_854_775_805, 5),
        (5, 3, 2),
        (5, 3, 2),
        (5, 9_223_372_036_854_775_804, 5),
        (5, 4, 1),
        (5, 4, 1),
        (5, 9_223_372_036_854_775_803, 5),
        (5, 5, 0),
        (5, 5, 0),
        (5, 9_223_372_036_854_775_802, 5),
        (-5, 9_223_372_036_854_775_807, 9_223_372_036_854_775_802),
        (-5, 1, 0),
        (-5, 1, 0),
        (-5, 9_223_372_036_854_775_806, 9_223_372_036_854_775_801),
        (-5, 2, 1),
        (-5, 2, 1),
        (-5, 9_223_372_036_854_775_805, 9_223_372_036_854_775_800),
        (-5, 3, 1),
        (-5, 3, 1),
        (-5, 9_223_372_036_854_775_804, 9_223_372_036_854_775_799),
        (-5, 4, 3),
        (-5, 4, 3),
        (-5, 9_223_372_036_854_775_803, 9_223_372_036_854_775_798),
        (-5, 5, 0),
        (-5, 5, 0),
        (-5, 9_223_372_036_854_775_802, 9_223_372_036_854_775_797),
        (5, 9_223_372_036_854_775_807, 5),
        (5, 1, 0),
        (5, 1, 0),
        (5, 9_223_372_036_854_775_806, 5),
        (5, 2, 1),
        (5, 2, 1),
        (5, 9_223_372_036_854_775_805, 5),
        (5, 3, 2),
        (5, 3, 2),
        (5, 9_223_372_036_854_775_804, 5),
        (5, 4, 1),
        (5, 4, 1),
        (5, 9_223_372_036_854_775_803, 5),
        (5, 5, 0),
        (5, 5, 0),
        (5, 9_223_372_036_854_775_802, 5),
        (-9_223_372_036_854_775_803, 9_223_372_036_854_775_807, 4),
        (-9_223_372_036_854_775_803, 1, 0),
        (-9_223_372_036_854_775_803, 1, 0),
        (-9_223_372_036_854_775_803, 9_223_372_036_854_775_806, 3),
        (-9_223_372_036_854_775_803, 2, 1),
        (-9_223_372_036_854_775_803, 2, 1),
        (-9_223_372_036_854_775_803, 9_223_372_036_854_775_805, 2),
        (-9_223_372_036_854_775_803, 3, 0),
        (-9_223_372_036_854_775_803, 3, 0),
        (-9_223_372_036_854_775_803, 9_223_372_036_854_775_804, 1),
        (-9_223_372_036_854_775_803, 4, 1),
        (-9_223_372_036_854_775_803, 4, 1),
        (-9_223_372_036_854_775_803, 9_223_372_036_854_775_803, 0),
        (-9_223_372_036_854_775_803, 5, 2),
        (-9_223_372_036_854_775_803, 5, 2),
        (-9_223_372_036_854_775_803, 9_223_372_036_854_775_802, 9_223_372_036_854_775_801),
        (9_223_372_036_854_775_802, 9_223_372_036_854_775_807, 9_223_372_036_854_775_802),
        (9_223_372_036_854_775_802, 1, 0),
        (9_223_372_036_854_775_802, 1, 0),
        (9_223_372_036_854_775_802, 9_223_372_036_854_775_806, 9_223_372_036_854_775_802),
        (9_223_372_036_854_775_802, 2, 0),
        (9_223_372_036_854_775_802, 2, 0),
        (9_223_372_036_854_775_802, 9_223_372_036_854_775_805, 9_223_372_036_854_775_802),
        (9_223_372_036_854_775_802, 3, 2),
        (9_223_372_036_854_775_802, 3, 2),
        (9_223_372_036_854_775_802, 9_223_372_036_854_775_804, 9_223_372_036_854_775_802),
        (9_223_372_036_854_775_802, 4, 2),
        (9_223_372_036_854_775_802, 4, 2),
        (9_223_372_036_854_775_802, 9_223_372_036_854_775_803, 9_223_372_036_854_775_802),
        (9_223_372_036_854_775_802, 5, 2),
        (9_223_372_036_854_775_802, 5, 2),
        (9_223_372_036_854_775_802, 9_223_372_036_854_775_802, 0),
      ]

      for (a, b, ans) in ab {
        XCTAssertEqual(ans, _Internal.safe_mod(a, b))
      }
    }

    func testInvGcdBound() throws {

      //        throw XCTSkip()

      var pred = [ll]()
      //        for i in 0..<=10 {
      for i in 0 ..<= ll(10) {
        pred.append(i)
        pred.append(-i)
        pred.append(ll.min + i)
        pred.append(ll.max - i)

        pred.append(ll.min / 2 + i)
        pred.append(ll.min / 2 - i)
        pred.append(ll.max / 2 + i)
        pred.append(ll.max / 2 - i)

        pred.append(ll.min / 3 + i)
        pred.append(ll.min / 3 - i)
        pred.append(ll.max / 3 + i)
        pred.append(ll.max / 3 - i)
      }
      pred.append(998_244_353)
      pred.append(1_000_000_007)
      pred.append(1_000_000_009)
      pred.append(-998_244_353)
      pred.append(-1_000_000_007)
      pred.append(-1_000_000_009)

      for a in pred {
        for b in pred {
          if b <= 0 { continue }
          let a2 = _Internal.safe_mod(a, b)
          let eg = _Internal.inv_gcd(a, b)
          let g = gcd(a2, b)
          XCTAssertEqual(g, eg.first)
          XCTAssertLessThanOrEqual(0, eg.second, "a - \(a), b - \(b)")
          XCTAssertLessThanOrEqual(eg.second, b / eg.first, "a - \(a), b - \(b)")
          XCTAssertEqual(BigInt(g) % BigInt(b), BigInt(eg.second) * BigInt(a2) % BigInt(b))
        }
      }
    }

    func testInvGcdBound2() throws {

      //        throw XCTSkip()

      var pred = [Int]()
      //        for i in 0..<=10 {
      for i in 0 ..<= 10 {
        pred.append(i)
        pred.append(-i)
        pred.append(Int.min + i)
        pred.append(Int.max - i)

        pred.append(Int.min / 2 + i)
        pred.append(Int.min / 2 - i)
        pred.append(Int.max / 2 + i)
        pred.append(Int.max / 2 - i)

        pred.append(Int.min / 3 + i)
        pred.append(Int.min / 3 - i)
        pred.append(Int.max / 3 + i)
        pred.append(Int.max / 3 - i)
      }
      pred.append(998_244_353)
      pred.append(1_000_000_007)
      pred.append(1_000_000_009)
      pred.append(-998_244_353)
      pred.append(-1_000_000_007)
      pred.append(-1_000_000_009)

      for a in pred {
        for b in pred {
          if b <= 0 { continue }
          let a2 = _Internal.safe_mod(a, b)
          let eg = _Internal.inv_gcd(a, b)
          let g = gcd(a2, b)
          XCTAssertEqual(g, eg.first)
          XCTAssertLessThanOrEqual(0, eg.second, "a - \(a), b - \(b)")
          XCTAssertLessThanOrEqual(eg.second, b / eg.first, "a - \(a), b - \(b)")
          XCTAssertEqual(BigInt(g) % BigInt(b), BigInt(eg.second) * BigInt(a2) % BigInt(b))
        }
      }
    }

    func testInvGcdBoundAlt() throws {
      let ab: [(a: ll, b: ll, a2: ll, eg: (ll, ll), g: ll)] = [
        (
          0, 9_223_372_036_854_775_807, 0, (9_223_372_036_854_775_807, 0), 9_223_372_036_854_775_807
        ),
        (
          0, 4_611_686_018_427_387_903, 0, (4_611_686_018_427_387_903, 0), 4_611_686_018_427_387_903
        ),
        (
          0, 4_611_686_018_427_387_903, 0, (4_611_686_018_427_387_903, 0), 4_611_686_018_427_387_903
        ),
        (
          0, 3_074_457_345_618_258_602, 0, (3_074_457_345_618_258_602, 0), 3_074_457_345_618_258_602
        ),
        (
          0, 3_074_457_345_618_258_602, 0, (3_074_457_345_618_258_602, 0), 3_074_457_345_618_258_602
        ),
        (0, 1, 0, (1, 0), 1),
        (
          0, 9_223_372_036_854_775_806, 0, (9_223_372_036_854_775_806, 0), 9_223_372_036_854_775_806
        ),
        (
          0, 4_611_686_018_427_387_904, 0, (4_611_686_018_427_387_904, 0), 4_611_686_018_427_387_904
        ),
        (
          0, 4_611_686_018_427_387_902, 0, (4_611_686_018_427_387_902, 0), 4_611_686_018_427_387_902
        ),
        (
          0, 3_074_457_345_618_258_603, 0, (3_074_457_345_618_258_603, 0), 3_074_457_345_618_258_603
        ),
        (
          0, 3_074_457_345_618_258_601, 0, (3_074_457_345_618_258_601, 0), 3_074_457_345_618_258_601
        ),
        (0, 998_244_353, 0, (998_244_353, 0), 998_244_353),
        (0, 1_000_000_007, 0, (1_000_000_007, 0), 1_000_000_007),
        (0, 1_000_000_009, 0, (1_000_000_009, 0), 1_000_000_009),
        (
          0, 9_223_372_036_854_775_807, 0, (9_223_372_036_854_775_807, 0), 9_223_372_036_854_775_807
        ),
        (
          0, 4_611_686_018_427_387_903, 0, (4_611_686_018_427_387_903, 0), 4_611_686_018_427_387_903
        ),
        (
          0, 4_611_686_018_427_387_903, 0, (4_611_686_018_427_387_903, 0), 4_611_686_018_427_387_903
        ),
        (
          0, 3_074_457_345_618_258_602, 0, (3_074_457_345_618_258_602, 0), 3_074_457_345_618_258_602
        ),
        (
          0, 3_074_457_345_618_258_602, 0, (3_074_457_345_618_258_602, 0), 3_074_457_345_618_258_602
        ),
        (0, 1, 0, (1, 0), 1),
        (
          0, 9_223_372_036_854_775_806, 0, (9_223_372_036_854_775_806, 0), 9_223_372_036_854_775_806
        ),
        (
          0, 4_611_686_018_427_387_904, 0, (4_611_686_018_427_387_904, 0), 4_611_686_018_427_387_904
        ),
        (
          0, 4_611_686_018_427_387_902, 0, (4_611_686_018_427_387_902, 0), 4_611_686_018_427_387_902
        ),
        (
          0, 3_074_457_345_618_258_603, 0, (3_074_457_345_618_258_603, 0), 3_074_457_345_618_258_603
        ),
        (
          0, 3_074_457_345_618_258_601, 0, (3_074_457_345_618_258_601, 0), 3_074_457_345_618_258_601
        ),
        (0, 998_244_353, 0, (998_244_353, 0), 998_244_353),
        (0, 1_000_000_007, 0, (1_000_000_007, 0), 1_000_000_007),
        (0, 1_000_000_009, 0, (1_000_000_009, 0), 1_000_000_009),
        (
          -9_223_372_036_854_775_808, 9_223_372_036_854_775_807, 9_223_372_036_854_775_806,
          (1, 9_223_372_036_854_775_806), 1
        ),
        (
          -9_223_372_036_854_775_808, 4_611_686_018_427_387_903, 4_611_686_018_427_387_901,
          (1, 2_305_843_009_213_693_951), 1
        ),
        (
          -9_223_372_036_854_775_808, 4_611_686_018_427_387_903, 4_611_686_018_427_387_901,
          (1, 2_305_843_009_213_693_951), 1
        ),
        (
          -9_223_372_036_854_775_808, 3_074_457_345_618_258_602, 3_074_457_345_618_258_600,
          (2, 1_537_228_672_809_129_300), 2
        ),
        (
          -9_223_372_036_854_775_808, 3_074_457_345_618_258_602, 3_074_457_345_618_258_600,
          (2, 1_537_228_672_809_129_300), 2
        ),
        (-9_223_372_036_854_775_808, 1, 0, (1, 0), 1),
        (
          -9_223_372_036_854_775_808, 9_223_372_036_854_775_806, 9_223_372_036_854_775_804,
          (2, 4_611_686_018_427_387_902), 2
        ),
        (
          -9_223_372_036_854_775_808, 4_611_686_018_427_387_904, 0, (4_611_686_018_427_387_904, 0),
          4_611_686_018_427_387_904
        ),
        (
          -9_223_372_036_854_775_808, 4_611_686_018_427_387_902, 4_611_686_018_427_387_898,
          (2, 1_152_921_504_606_846_975), 2
        ),
        (-9_223_372_036_854_775_808, 3_074_457_345_618_258_603, 1, (1, 1), 1),
        (
          -9_223_372_036_854_775_808, 3_074_457_345_618_258_601, 3_074_457_345_618_258_596,
          (1, 614_891_469_123_651_720), 1
        ),
        (-9_223_372_036_854_775_808, 998_244_353, 532_218_398, (1, 107_850_176), 1),
        (-9_223_372_036_854_775_808, 1_000_000_007, 708_828_003, (1, 463_593_567), 1),
        (-9_223_372_036_854_775_808, 1_000_000_009, 155_571_778, (1, 408_458_426), 1),
        (
          9_223_372_036_854_775_807, 9_223_372_036_854_775_807, 0, (9_223_372_036_854_775_807, 0),
          9_223_372_036_854_775_807
        ),
        (9_223_372_036_854_775_807, 4_611_686_018_427_387_903, 1, (1, 1), 1),
        (9_223_372_036_854_775_807, 4_611_686_018_427_387_903, 1, (1, 1), 1),
        (9_223_372_036_854_775_807, 3_074_457_345_618_258_602, 1, (1, 1), 1),
        (9_223_372_036_854_775_807, 3_074_457_345_618_258_602, 1, (1, 1), 1),
        (9_223_372_036_854_775_807, 1, 0, (1, 0), 1),
        (9_223_372_036_854_775_807, 9_223_372_036_854_775_806, 1, (1, 1), 1),
        (
          9_223_372_036_854_775_807, 4_611_686_018_427_387_904, 4_611_686_018_427_387_903,
          (1, 4_611_686_018_427_387_903), 1
        ),
        (
          9_223_372_036_854_775_807, 4_611_686_018_427_387_902, 3, (1, 1_537_228_672_809_129_301), 1
        ),
        (
          9_223_372_036_854_775_807, 3_074_457_345_618_258_603, 3_074_457_345_618_258_601,
          (1, 1_537_228_672_809_129_301), 1
        ),
        (
          9_223_372_036_854_775_807, 3_074_457_345_618_258_601, 4, (1, 2_305_843_009_213_693_951), 1
        ),
        (9_223_372_036_854_775_807, 998_244_353, 466_025_954, (1, 776_960_636), 1),
        (9_223_372_036_854_775_807, 1_000_000_007, 291_172_003, (1, 933_137_596), 1),
        (9_223_372_036_854_775_807, 1_000_000_009, 844_428_230, (1, 479_091_556), 1),
        (
          -4_611_686_018_427_387_904, 9_223_372_036_854_775_807, 4_611_686_018_427_387_903,
          (1, 9_223_372_036_854_775_805), 1
        ),
        (
          -4_611_686_018_427_387_904, 4_611_686_018_427_387_903, 4_611_686_018_427_387_902,
          (1, 4_611_686_018_427_387_902), 1
        ),
        (
          -4_611_686_018_427_387_904, 4_611_686_018_427_387_903, 4_611_686_018_427_387_902,
          (1, 4_611_686_018_427_387_902), 1
        ),
        (
          -4_611_686_018_427_387_904, 3_074_457_345_618_258_602, 1_537_228_672_809_129_300,
          (2, 1_537_228_672_809_129_299), 2
        ),
        (
          -4_611_686_018_427_387_904, 3_074_457_345_618_258_602, 1_537_228_672_809_129_300,
          (2, 1_537_228_672_809_129_299), 2
        ),
        (-4_611_686_018_427_387_904, 1, 0, (1, 0), 1),
        (
          -4_611_686_018_427_387_904, 9_223_372_036_854_775_806, 4_611_686_018_427_387_902,
          (2, 4_611_686_018_427_387_901), 2
        ),
        (
          -4_611_686_018_427_387_904, 4_611_686_018_427_387_904, 0, (4_611_686_018_427_387_904, 0),
          4_611_686_018_427_387_904
        ),
        (
          -4_611_686_018_427_387_904, 4_611_686_018_427_387_902, 4_611_686_018_427_387_900,
          (2, 2_305_843_009_213_693_950), 2
        ),
        (
          -4_611_686_018_427_387_904, 3_074_457_345_618_258_603, 1_537_228_672_809_129_302, (1, 2),
          1
        ),
        (
          -4_611_686_018_427_387_904, 3_074_457_345_618_258_601, 1_537_228_672_809_129_298,
          (1, 1_229_782_938_247_303_440), 1
        ),
        (-4_611_686_018_427_387_904, 998_244_353, 266_109_199, (1, 215_700_352), 1),
        (-4_611_686_018_427_387_904, 1_000_000_007, 854_414_005, (1, 927_187_134), 1),
        (-4_611_686_018_427_387_904, 1_000_000_009, 77_785_889, (1, 816_916_852), 1),
        (
          -4_611_686_018_427_387_904, 9_223_372_036_854_775_807, 4_611_686_018_427_387_903,
          (1, 9_223_372_036_854_775_805), 1
        ),
        (
          -4_611_686_018_427_387_904, 4_611_686_018_427_387_903, 4_611_686_018_427_387_902,
          (1, 4_611_686_018_427_387_902), 1
        ),
        (
          -4_611_686_018_427_387_904, 4_611_686_018_427_387_903, 4_611_686_018_427_387_902,
          (1, 4_611_686_018_427_387_902), 1
        ),
        (
          -4_611_686_018_427_387_904, 3_074_457_345_618_258_602, 1_537_228_672_809_129_300,
          (2, 1_537_228_672_809_129_299), 2
        ),
        (
          -4_611_686_018_427_387_904, 3_074_457_345_618_258_602, 1_537_228_672_809_129_300,
          (2, 1_537_228_672_809_129_299), 2
        ),
        (-4_611_686_018_427_387_904, 1, 0, (1, 0), 1),
        (
          -4_611_686_018_427_387_904, 9_223_372_036_854_775_806, 4_611_686_018_427_387_902,
          (2, 4_611_686_018_427_387_901), 2
        ),
        (
          -4_611_686_018_427_387_904, 4_611_686_018_427_387_904, 0, (4_611_686_018_427_387_904, 0),
          4_611_686_018_427_387_904
        ),
        (
          -4_611_686_018_427_387_904, 4_611_686_018_427_387_902, 4_611_686_018_427_387_900,
          (2, 2_305_843_009_213_693_950), 2
        ),
        (
          -4_611_686_018_427_387_904, 3_074_457_345_618_258_603, 1_537_228_672_809_129_302, (1, 2),
          1
        ),
        (
          -4_611_686_018_427_387_904, 3_074_457_345_618_258_601, 1_537_228_672_809_129_298,
          (1, 1_229_782_938_247_303_440), 1
        ),
        (-4_611_686_018_427_387_904, 998_244_353, 266_109_199, (1, 215_700_352), 1),
        (-4_611_686_018_427_387_904, 1_000_000_007, 854_414_005, (1, 927_187_134), 1),
        (-4_611_686_018_427_387_904, 1_000_000_009, 77_785_889, (1, 816_916_852), 1),
        (
          4_611_686_018_427_387_903, 9_223_372_036_854_775_807, 4_611_686_018_427_387_903,
          (1, 9_223_372_036_854_775_805), 1
        ),
        (
          4_611_686_018_427_387_903, 4_611_686_018_427_387_903, 0, (4_611_686_018_427_387_903, 0),
          4_611_686_018_427_387_903
        ),
        (
          4_611_686_018_427_387_903, 4_611_686_018_427_387_903, 0, (4_611_686_018_427_387_903, 0),
          4_611_686_018_427_387_903
        ),
        (
          4_611_686_018_427_387_903, 3_074_457_345_618_258_602, 1_537_228_672_809_129_301,
          (1_537_228_672_809_129_301, 1), 1_537_228_672_809_129_301
        ),
        (
          4_611_686_018_427_387_903, 3_074_457_345_618_258_602, 1_537_228_672_809_129_301,
          (1_537_228_672_809_129_301, 1), 1_537_228_672_809_129_301
        ),
        (4_611_686_018_427_387_903, 1, 0, (1, 0), 1),
        (
          4_611_686_018_427_387_903, 9_223_372_036_854_775_806, 4_611_686_018_427_387_903,
          (4_611_686_018_427_387_903, 1), 4_611_686_018_427_387_903
        ),
        (
          4_611_686_018_427_387_903, 4_611_686_018_427_387_904, 4_611_686_018_427_387_903,
          (1, 4_611_686_018_427_387_903), 1
        ),
        (4_611_686_018_427_387_903, 4_611_686_018_427_387_902, 1, (1, 1), 1),
        (
          4_611_686_018_427_387_903, 3_074_457_345_618_258_603, 1_537_228_672_809_129_300,
          (3, 1_024_819_115_206_086_199), 3
        ),
        (
          4_611_686_018_427_387_903, 3_074_457_345_618_258_601, 1_537_228_672_809_129_302,
          (1, 1_024_819_115_206_086_201), 1
        ),
        (4_611_686_018_427_387_903, 998_244_353, 732_135_153, (1, 699_752_290), 1),
        (4_611_686_018_427_387_903, 1_000_000_007, 145_586_001, (1, 857_606_487), 1),
        (4_611_686_018_427_387_903, 1_000_000_009, 922_214_119, (1, 401_318_019), 1),
        (
          4_611_686_018_427_387_903, 9_223_372_036_854_775_807, 4_611_686_018_427_387_903,
          (1, 9_223_372_036_854_775_805), 1
        ),
        (
          4_611_686_018_427_387_903, 4_611_686_018_427_387_903, 0, (4_611_686_018_427_387_903, 0),
          4_611_686_018_427_387_903
        ),
        (
          4_611_686_018_427_387_903, 4_611_686_018_427_387_903, 0, (4_611_686_018_427_387_903, 0),
          4_611_686_018_427_387_903
        ),
        (
          4_611_686_018_427_387_903, 3_074_457_345_618_258_602, 1_537_228_672_809_129_301,
          (1_537_228_672_809_129_301, 1), 1_537_228_672_809_129_301
        ),
        (
          4_611_686_018_427_387_903, 3_074_457_345_618_258_602, 1_537_228_672_809_129_301,
          (1_537_228_672_809_129_301, 1), 1_537_228_672_809_129_301
        ),
        (4_611_686_018_427_387_903, 1, 0, (1, 0), 1),
        (
          4_611_686_018_427_387_903, 9_223_372_036_854_775_806, 4_611_686_018_427_387_903,
          (4_611_686_018_427_387_903, 1), 4_611_686_018_427_387_903
        ),
        (
          4_611_686_018_427_387_903, 4_611_686_018_427_387_904, 4_611_686_018_427_387_903,
          (1, 4_611_686_018_427_387_903), 1
        ),
        (4_611_686_018_427_387_903, 4_611_686_018_427_387_902, 1, (1, 1), 1),
        (
          4_611_686_018_427_387_903, 3_074_457_345_618_258_603, 1_537_228_672_809_129_300,
          (3, 1_024_819_115_206_086_199), 3
        ),
        (
          4_611_686_018_427_387_903, 3_074_457_345_618_258_601, 1_537_228_672_809_129_302,
          (1, 1_024_819_115_206_086_201), 1
        ),
        (4_611_686_018_427_387_903, 998_244_353, 732_135_153, (1, 699_752_290), 1),
        (4_611_686_018_427_387_903, 1_000_000_007, 145_586_001, (1, 857_606_487), 1),
        (4_611_686_018_427_387_903, 1_000_000_009, 922_214_119, (1, 401_318_019), 1),
        (
          -3_074_457_345_618_258_602, 9_223_372_036_854_775_807, 6_148_914_691_236_517_205, (1, 3),
          1
        ),
        (
          -3_074_457_345_618_258_602, 4_611_686_018_427_387_903, 1_537_228_672_809_129_301,
          (1_537_228_672_809_129_301, 1), 1_537_228_672_809_129_301
        ),
        (
          -3_074_457_345_618_258_602, 4_611_686_018_427_387_903, 1_537_228_672_809_129_301,
          (1_537_228_672_809_129_301, 1), 1_537_228_672_809_129_301
        ),
        (
          -3_074_457_345_618_258_602, 3_074_457_345_618_258_602, 0, (3_074_457_345_618_258_602, 0),
          3_074_457_345_618_258_602
        ),
        (
          -3_074_457_345_618_258_602, 3_074_457_345_618_258_602, 0, (3_074_457_345_618_258_602, 0),
          3_074_457_345_618_258_602
        ),
        (-3_074_457_345_618_258_602, 1, 0, (1, 0), 1),
        (
          -3_074_457_345_618_258_602, 9_223_372_036_854_775_806, 6_148_914_691_236_517_204,
          (3_074_457_345_618_258_602, 2), 3_074_457_345_618_258_602
        ),
        (
          -3_074_457_345_618_258_602, 4_611_686_018_427_387_904, 1_537_228_672_809_129_302, (2, 3),
          2
        ),
        (
          -3_074_457_345_618_258_602, 4_611_686_018_427_387_902, 1_537_228_672_809_129_300,
          (2, 2_305_843_009_213_693_948), 2
        ),
        (-3_074_457_345_618_258_602, 3_074_457_345_618_258_603, 1, (1, 1), 1),
        (
          -3_074_457_345_618_258_602, 3_074_457_345_618_258_601, 3_074_457_345_618_258_600,
          (1, 3_074_457_345_618_258_600), 1
        ),
        (-3_074_457_345_618_258_602, 998_244_353, 510_154_251, (1, 946_860_271), 1),
        (-3_074_457_345_618_258_602, 1_000_000_007, 902_942_673, (1, 213_590_280), 1),
        (-3_074_457_345_618_258_602, 1_000_000_009, 51_857_260, (1, 898_022_985), 1),
        (
          -3_074_457_345_618_258_602, 9_223_372_036_854_775_807, 6_148_914_691_236_517_205, (1, 3),
          1
        ),
        (
          -3_074_457_345_618_258_602, 4_611_686_018_427_387_903, 1_537_228_672_809_129_301,
          (1_537_228_672_809_129_301, 1), 1_537_228_672_809_129_301
        ),
        (
          -3_074_457_345_618_258_602, 4_611_686_018_427_387_903, 1_537_228_672_809_129_301,
          (1_537_228_672_809_129_301, 1), 1_537_228_672_809_129_301
        ),
        (
          -3_074_457_345_618_258_602, 3_074_457_345_618_258_602, 0, (3_074_457_345_618_258_602, 0),
          3_074_457_345_618_258_602
        ),
        (
          -3_074_457_345_618_258_602, 3_074_457_345_618_258_602, 0, (3_074_457_345_618_258_602, 0),
          3_074_457_345_618_258_602
        ),
        (-3_074_457_345_618_258_602, 1, 0, (1, 0), 1),
        (
          -3_074_457_345_618_258_602, 9_223_372_036_854_775_806, 6_148_914_691_236_517_204,
          (3_074_457_345_618_258_602, 2), 3_074_457_345_618_258_602
        ),
        (
          -3_074_457_345_618_258_602, 4_611_686_018_427_387_904, 1_537_228_672_809_129_302, (2, 3),
          2
        ),
        (
          -3_074_457_345_618_258_602, 4_611_686_018_427_387_902, 1_537_228_672_809_129_300,
          (2, 2_305_843_009_213_693_948), 2
        ),
        (-3_074_457_345_618_258_602, 3_074_457_345_618_258_603, 1, (1, 1), 1),
        (
          -3_074_457_345_618_258_602, 3_074_457_345_618_258_601, 3_074_457_345_618_258_600,
          (1, 3_074_457_345_618_258_600), 1
        ),
        (-3_074_457_345_618_258_602, 998_244_353, 510_154_251, (1, 946_860_271), 1),
        (-3_074_457_345_618_258_602, 1_000_000_007, 902_942_673, (1, 213_590_280), 1),
        (-3_074_457_345_618_258_602, 1_000_000_009, 51_857_260, (1, 898_022_985), 1),
        (
          3_074_457_345_618_258_602, 9_223_372_036_854_775_807, 3_074_457_345_618_258_602,
          (1, 9_223_372_036_854_775_804), 1
        ),
        (
          3_074_457_345_618_258_602, 4_611_686_018_427_387_903, 3_074_457_345_618_258_602,
          (1_537_228_672_809_129_301, 2), 1_537_228_672_809_129_301
        ),
        (
          3_074_457_345_618_258_602, 4_611_686_018_427_387_903, 3_074_457_345_618_258_602,
          (1_537_228_672_809_129_301, 2), 1_537_228_672_809_129_301
        ),
        (
          3_074_457_345_618_258_602, 3_074_457_345_618_258_602, 0, (3_074_457_345_618_258_602, 0),
          3_074_457_345_618_258_602
        ),
        (
          3_074_457_345_618_258_602, 3_074_457_345_618_258_602, 0, (3_074_457_345_618_258_602, 0),
          3_074_457_345_618_258_602
        ),
        (3_074_457_345_618_258_602, 1, 0, (1, 0), 1),
        (
          3_074_457_345_618_258_602, 9_223_372_036_854_775_806, 3_074_457_345_618_258_602,
          (3_074_457_345_618_258_602, 1), 3_074_457_345_618_258_602
        ),
        (
          3_074_457_345_618_258_602, 4_611_686_018_427_387_904, 3_074_457_345_618_258_602,
          (2, 2_305_843_009_213_693_949), 2
        ),
        (
          3_074_457_345_618_258_602, 4_611_686_018_427_387_902, 3_074_457_345_618_258_602, (2, 3), 2
        ),
        (
          3_074_457_345_618_258_602, 3_074_457_345_618_258_603, 3_074_457_345_618_258_602,
          (1, 3_074_457_345_618_258_602), 1
        ),
        (3_074_457_345_618_258_602, 3_074_457_345_618_258_601, 1, (1, 1), 1),
        (3_074_457_345_618_258_602, 998_244_353, 488_090_102, (1, 51_384_082), 1),
        (3_074_457_345_618_258_602, 1_000_000_007, 97_057_334, (1, 786_409_727), 1),
        (3_074_457_345_618_258_602, 1_000_000_009, 948_142_749, (1, 101_977_024), 1),
        (
          3_074_457_345_618_258_602, 9_223_372_036_854_775_807, 3_074_457_345_618_258_602,
          (1, 9_223_372_036_854_775_804), 1
        ),
        (
          3_074_457_345_618_258_602, 4_611_686_018_427_387_903, 3_074_457_345_618_258_602,
          (1_537_228_672_809_129_301, 2), 1_537_228_672_809_129_301
        ),
        (
          3_074_457_345_618_258_602, 4_611_686_018_427_387_903, 3_074_457_345_618_258_602,
          (1_537_228_672_809_129_301, 2), 1_537_228_672_809_129_301
        ),
        (
          3_074_457_345_618_258_602, 3_074_457_345_618_258_602, 0, (3_074_457_345_618_258_602, 0),
          3_074_457_345_618_258_602
        ),
        (
          3_074_457_345_618_258_602, 3_074_457_345_618_258_602, 0, (3_074_457_345_618_258_602, 0),
          3_074_457_345_618_258_602
        ),
        (3_074_457_345_618_258_602, 1, 0, (1, 0), 1),
        (
          3_074_457_345_618_258_602, 9_223_372_036_854_775_806, 3_074_457_345_618_258_602,
          (3_074_457_345_618_258_602, 1), 3_074_457_345_618_258_602
        ),
        (
          3_074_457_345_618_258_602, 4_611_686_018_427_387_904, 3_074_457_345_618_258_602,
          (2, 2_305_843_009_213_693_949), 2
        ),
        (
          3_074_457_345_618_258_602, 4_611_686_018_427_387_902, 3_074_457_345_618_258_602, (2, 3), 2
        ),
        (
          3_074_457_345_618_258_602, 3_074_457_345_618_258_603, 3_074_457_345_618_258_602,
          (1, 3_074_457_345_618_258_602), 1
        ),
        (3_074_457_345_618_258_602, 3_074_457_345_618_258_601, 1, (1, 1), 1),
        (3_074_457_345_618_258_602, 998_244_353, 488_090_102, (1, 51_384_082), 1),
        (3_074_457_345_618_258_602, 1_000_000_007, 97_057_334, (1, 786_409_727), 1),
        (3_074_457_345_618_258_602, 1_000_000_009, 948_142_749, (1, 101_977_024), 1),
        (1, 9_223_372_036_854_775_807, 1, (1, 1), 1),
        (1, 4_611_686_018_427_387_903, 1, (1, 1), 1),
        (1, 4_611_686_018_427_387_903, 1, (1, 1), 1),
        (1, 3_074_457_345_618_258_602, 1, (1, 1), 1),
        (1, 3_074_457_345_618_258_602, 1, (1, 1), 1),
        (1, 1, 0, (1, 0), 1),
        (1, 9_223_372_036_854_775_806, 1, (1, 1), 1),
        (1, 4_611_686_018_427_387_904, 1, (1, 1), 1),
        (1, 4_611_686_018_427_387_902, 1, (1, 1), 1),
        (1, 3_074_457_345_618_258_603, 1, (1, 1), 1),
        (1, 3_074_457_345_618_258_601, 1, (1, 1), 1),
        (1, 998_244_353, 1, (1, 1), 1),
        (1, 1_000_000_007, 1, (1, 1), 1),
        (1, 1_000_000_009, 1, (1, 1), 1),
        (
          -1, 9_223_372_036_854_775_807, 9_223_372_036_854_775_806, (1, 9_223_372_036_854_775_806),
          1
        ),
        (
          -1, 4_611_686_018_427_387_903, 4_611_686_018_427_387_902, (1, 4_611_686_018_427_387_902),
          1
        ),
        (
          -1, 4_611_686_018_427_387_903, 4_611_686_018_427_387_902, (1, 4_611_686_018_427_387_902),
          1
        ),
        (
          -1, 3_074_457_345_618_258_602, 3_074_457_345_618_258_601, (1, 3_074_457_345_618_258_601),
          1
        ),
        (
          -1, 3_074_457_345_618_258_602, 3_074_457_345_618_258_601, (1, 3_074_457_345_618_258_601),
          1
        ),
        (-1, 1, 0, (1, 0), 1),
        (
          -1, 9_223_372_036_854_775_806, 9_223_372_036_854_775_805, (1, 9_223_372_036_854_775_805),
          1
        ),
        (
          -1, 4_611_686_018_427_387_904, 4_611_686_018_427_387_903, (1, 4_611_686_018_427_387_903),
          1
        ),
        (
          -1, 4_611_686_018_427_387_902, 4_611_686_018_427_387_901, (1, 4_611_686_018_427_387_901),
          1
        ),
        (
          -1, 3_074_457_345_618_258_603, 3_074_457_345_618_258_602, (1, 3_074_457_345_618_258_602),
          1
        ),
        (
          -1, 3_074_457_345_618_258_601, 3_074_457_345_618_258_600, (1, 3_074_457_345_618_258_600),
          1
        ),
        (-1, 998_244_353, 998_244_352, (1, 998_244_352), 1),
        (-1, 1_000_000_007, 1_000_000_006, (1, 1_000_000_006), 1),
        (-1, 1_000_000_009, 1_000_000_008, (1, 1_000_000_008), 1),
        (
          -9_223_372_036_854_775_807, 9_223_372_036_854_775_807, 0, (9_223_372_036_854_775_807, 0),
          9_223_372_036_854_775_807
        ),
        (
          -9_223_372_036_854_775_807, 4_611_686_018_427_387_903, 4_611_686_018_427_387_902,
          (1, 4_611_686_018_427_387_902), 1
        ),
        (
          -9_223_372_036_854_775_807, 4_611_686_018_427_387_903, 4_611_686_018_427_387_902,
          (1, 4_611_686_018_427_387_902), 1
        ),
        (
          -9_223_372_036_854_775_807, 3_074_457_345_618_258_602, 3_074_457_345_618_258_601,
          (1, 3_074_457_345_618_258_601), 1
        ),
        (
          -9_223_372_036_854_775_807, 3_074_457_345_618_258_602, 3_074_457_345_618_258_601,
          (1, 3_074_457_345_618_258_601), 1
        ),
        (-9_223_372_036_854_775_807, 1, 0, (1, 0), 1),
        (
          -9_223_372_036_854_775_807, 9_223_372_036_854_775_806, 9_223_372_036_854_775_805,
          (1, 9_223_372_036_854_775_805), 1
        ),
        (-9_223_372_036_854_775_807, 4_611_686_018_427_387_904, 1, (1, 1), 1),
        (
          -9_223_372_036_854_775_807, 4_611_686_018_427_387_902, 4_611_686_018_427_387_899,
          (1, 3_074_457_345_618_258_601), 1
        ),
        (
          -9_223_372_036_854_775_807, 3_074_457_345_618_258_603, 2, (1, 1_537_228_672_809_129_302),
          1
        ),
        (
          -9_223_372_036_854_775_807, 3_074_457_345_618_258_601, 3_074_457_345_618_258_597,
          (1, 768_614_336_404_564_650), 1
        ),
        (-9_223_372_036_854_775_807, 998_244_353, 532_218_399, (1, 221_283_717), 1),
        (-9_223_372_036_854_775_807, 1_000_000_007, 708_828_004, (1, 66_862_411), 1),
        (-9_223_372_036_854_775_807, 1_000_000_009, 155_571_779, (1, 520_908_453), 1),
        (
          9_223_372_036_854_775_806, 9_223_372_036_854_775_807, 9_223_372_036_854_775_806,
          (1, 9_223_372_036_854_775_806), 1
        ),
        (
          9_223_372_036_854_775_806, 4_611_686_018_427_387_903, 0, (4_611_686_018_427_387_903, 0),
          4_611_686_018_427_387_903
        ),
        (
          9_223_372_036_854_775_806, 4_611_686_018_427_387_903, 0, (4_611_686_018_427_387_903, 0),
          4_611_686_018_427_387_903
        ),
        (
          9_223_372_036_854_775_806, 3_074_457_345_618_258_602, 0, (3_074_457_345_618_258_602, 0),
          3_074_457_345_618_258_602
        ),
        (
          9_223_372_036_854_775_806, 3_074_457_345_618_258_602, 0, (3_074_457_345_618_258_602, 0),
          3_074_457_345_618_258_602
        ),
        (9_223_372_036_854_775_806, 1, 0, (1, 0), 1),
        (
          9_223_372_036_854_775_806, 9_223_372_036_854_775_806, 0, (9_223_372_036_854_775_806, 0),
          9_223_372_036_854_775_806
        ),
        (
          9_223_372_036_854_775_806, 4_611_686_018_427_387_904, 4_611_686_018_427_387_902,
          (2, 2_305_843_009_213_693_951), 2
        ),
        (9_223_372_036_854_775_806, 4_611_686_018_427_387_902, 2, (2, 1), 2),
        (
          9_223_372_036_854_775_806, 3_074_457_345_618_258_603, 3_074_457_345_618_258_600,
          (3, 1_024_819_115_206_086_200), 3
        ),
        (
          9_223_372_036_854_775_806, 3_074_457_345_618_258_601, 3, (1, 2_049_638_230_412_172_401), 1
        ),
        (9_223_372_036_854_775_806, 998_244_353, 466_025_953, (1, 349_876_145), 1),
        (9_223_372_036_854_775_806, 1_000_000_007, 291_172_002, (1, 928_803_247), 1),
        (9_223_372_036_854_775_806, 1_000_000_009, 844_428_229, (1, 700_659_014), 1),
        (
          -4_611_686_018_427_387_903, 9_223_372_036_854_775_807, 4_611_686_018_427_387_904, (1, 2),
          1
        ),
        (
          -4_611_686_018_427_387_903, 4_611_686_018_427_387_903, 0, (4_611_686_018_427_387_903, 0),
          4_611_686_018_427_387_903
        ),
        (
          -4_611_686_018_427_387_903, 4_611_686_018_427_387_903, 0, (4_611_686_018_427_387_903, 0),
          4_611_686_018_427_387_903
        ),
        (
          -4_611_686_018_427_387_903, 3_074_457_345_618_258_602, 1_537_228_672_809_129_301,
          (1_537_228_672_809_129_301, 1), 1_537_228_672_809_129_301
        ),
        (
          -4_611_686_018_427_387_903, 3_074_457_345_618_258_602, 1_537_228_672_809_129_301,
          (1_537_228_672_809_129_301, 1), 1_537_228_672_809_129_301
        ),
        (-4_611_686_018_427_387_903, 1, 0, (1, 0), 1),
        (
          -4_611_686_018_427_387_903, 9_223_372_036_854_775_806, 4_611_686_018_427_387_903,
          (4_611_686_018_427_387_903, 1), 4_611_686_018_427_387_903
        ),
        (-4_611_686_018_427_387_903, 4_611_686_018_427_387_904, 1, (1, 1), 1),
        (
          -4_611_686_018_427_387_903, 4_611_686_018_427_387_902, 4_611_686_018_427_387_901,
          (1, 4_611_686_018_427_387_901), 1
        ),
        (
          -4_611_686_018_427_387_903, 3_074_457_345_618_258_603, 1_537_228_672_809_129_303, (3, 2),
          3
        ),
        (
          -4_611_686_018_427_387_903, 3_074_457_345_618_258_601, 1_537_228_672_809_129_299,
          (1, 2_049_638_230_412_172_400), 1
        ),
        (-4_611_686_018_427_387_903, 998_244_353, 266_109_200, (1, 298_492_063), 1),
        (-4_611_686_018_427_387_903, 1_000_000_007, 854_414_006, (1, 142_393_520), 1),
        (-4_611_686_018_427_387_903, 1_000_000_009, 77_785_890, (1, 598_681_990), 1),
        (
          -4_611_686_018_427_387_905, 9_223_372_036_854_775_807, 4_611_686_018_427_387_902,
          (1, 6_148_914_691_236_517_204), 1
        ),
        (
          -4_611_686_018_427_387_905, 4_611_686_018_427_387_903, 4_611_686_018_427_387_901,
          (1, 2_305_843_009_213_693_951), 1
        ),
        (
          -4_611_686_018_427_387_905, 4_611_686_018_427_387_903, 4_611_686_018_427_387_901,
          (1, 2_305_843_009_213_693_951), 1
        ),
        (
          -4_611_686_018_427_387_905, 3_074_457_345_618_258_602, 1_537_228_672_809_129_299,
          (1, 2_305_843_009_213_693_951), 1
        ),
        (
          -4_611_686_018_427_387_905, 3_074_457_345_618_258_602, 1_537_228_672_809_129_299,
          (1, 2_305_843_009_213_693_951), 1
        ),
        (-4_611_686_018_427_387_905, 1, 0, (1, 0), 1),
        (
          -4_611_686_018_427_387_905, 9_223_372_036_854_775_806, 4_611_686_018_427_387_901,
          (1, 2_305_843_009_213_693_951), 1
        ),
        (
          -4_611_686_018_427_387_905, 4_611_686_018_427_387_904, 4_611_686_018_427_387_903,
          (1, 4_611_686_018_427_387_903), 1
        ),
        (
          -4_611_686_018_427_387_905, 4_611_686_018_427_387_902, 4_611_686_018_427_387_899,
          (1, 3_074_457_345_618_258_601), 1
        ),
        (
          -4_611_686_018_427_387_905, 3_074_457_345_618_258_603, 1_537_228_672_809_129_301,
          (1, 3_074_457_345_618_258_601), 1
        ),
        (
          -4_611_686_018_427_387_905, 3_074_457_345_618_258_601, 1_537_228_672_809_129_297,
          (1, 878_416_384_462_359_600), 1
        ),
        (-4_611_686_018_427_387_905, 998_244_353, 266_109_198, (1, 747_371_219), 1),
        (-4_611_686_018_427_387_905, 1_000_000_007, 854_414_004, (1, 285_692_652), 1),
        (-4_611_686_018_427_387_905, 1_000_000_009, 77_785_888, (1, 911_988_247), 1),
        (
          4_611_686_018_427_387_904, 9_223_372_036_854_775_807, 4_611_686_018_427_387_904, (1, 2), 1
        ),
        (4_611_686_018_427_387_904, 4_611_686_018_427_387_903, 1, (1, 1), 1),
        (4_611_686_018_427_387_904, 4_611_686_018_427_387_903, 1, (1, 1), 1),
        (
          4_611_686_018_427_387_904, 3_074_457_345_618_258_602, 1_537_228_672_809_129_302, (2, 2), 2
        ),
        (
          4_611_686_018_427_387_904, 3_074_457_345_618_258_602, 1_537_228_672_809_129_302, (2, 2), 2
        ),
        (4_611_686_018_427_387_904, 1, 0, (1, 0), 1),
        (
          4_611_686_018_427_387_904, 9_223_372_036_854_775_806, 4_611_686_018_427_387_904, (2, 2), 2
        ),
        (
          4_611_686_018_427_387_904, 4_611_686_018_427_387_904, 0, (4_611_686_018_427_387_904, 0),
          4_611_686_018_427_387_904
        ),
        (4_611_686_018_427_387_904, 4_611_686_018_427_387_902, 2, (2, 1), 2),
        (
          4_611_686_018_427_387_904, 3_074_457_345_618_258_603, 1_537_228_672_809_129_301,
          (1, 3_074_457_345_618_258_601), 1
        ),
        (
          4_611_686_018_427_387_904, 3_074_457_345_618_258_601, 1_537_228_672_809_129_303,
          (1, 1_844_674_407_370_955_161), 1
        ),
        (4_611_686_018_427_387_904, 998_244_353, 732_135_154, (1, 782_544_001), 1),
        (4_611_686_018_427_387_904, 1_000_000_007, 145_586_002, (1, 72_812_873), 1),
        (4_611_686_018_427_387_904, 1_000_000_009, 922_214_120, (1, 183_083_157), 1),
        (
          4_611_686_018_427_387_902, 9_223_372_036_854_775_807, 4_611_686_018_427_387_902,
          (1, 6_148_914_691_236_517_204), 1
        ),
        (
          4_611_686_018_427_387_902, 4_611_686_018_427_387_903, 4_611_686_018_427_387_902,
          (1, 4_611_686_018_427_387_902), 1
        ),
        (
          4_611_686_018_427_387_902, 4_611_686_018_427_387_903, 4_611_686_018_427_387_902,
          (1, 4_611_686_018_427_387_902), 1
        ),
        (
          4_611_686_018_427_387_902, 3_074_457_345_618_258_602, 1_537_228_672_809_129_300,
          (2, 1_537_228_672_809_129_299), 2
        ),
        (
          4_611_686_018_427_387_902, 3_074_457_345_618_258_602, 1_537_228_672_809_129_300,
          (2, 1_537_228_672_809_129_299), 2
        ),
        (4_611_686_018_427_387_902, 1, 0, (1, 0), 1),
        (
          4_611_686_018_427_387_902, 9_223_372_036_854_775_806, 4_611_686_018_427_387_902,
          (2, 4_611_686_018_427_387_901), 2
        ),
        (
          4_611_686_018_427_387_902, 4_611_686_018_427_387_904, 4_611_686_018_427_387_902,
          (2, 2_305_843_009_213_693_951), 2
        ),
        (
          4_611_686_018_427_387_902, 4_611_686_018_427_387_902, 0, (4_611_686_018_427_387_902, 0),
          4_611_686_018_427_387_902
        ),
        (
          4_611_686_018_427_387_902, 3_074_457_345_618_258_603, 1_537_228_672_809_129_299,
          (1, 2_459_565_876_494_606_882), 1
        ),
        (
          4_611_686_018_427_387_902, 3_074_457_345_618_258_601, 1_537_228_672_809_129_301, (1, 2), 1
        ),
        (4_611_686_018_427_387_902, 998_244_353, 732_135_152, (1, 595_046_340), 1),
        (4_611_686_018_427_387_902, 1_000_000_007, 145_586_000, (1, 964_823_939), 1),
        (4_611_686_018_427_387_902, 1_000_000_009, 922_214_118, (1, 809_815_286), 1),
        (
          -3_074_457_345_618_258_601, 9_223_372_036_854_775_807, 6_148_914_691_236_517_206,
          (1, 6_917_529_027_641_081_856), 1
        ),
        (
          -3_074_457_345_618_258_601, 4_611_686_018_427_387_903, 1_537_228_672_809_129_302,
          (1, 1_537_228_672_809_129_302), 1
        ),
        (
          -3_074_457_345_618_258_601, 4_611_686_018_427_387_903, 1_537_228_672_809_129_302,
          (1, 1_537_228_672_809_129_302), 1
        ),
        (-3_074_457_345_618_258_601, 3_074_457_345_618_258_602, 1, (1, 1), 1),
        (-3_074_457_345_618_258_601, 3_074_457_345_618_258_602, 1, (1, 1), 1),
        (-3_074_457_345_618_258_601, 1, 0, (1, 0), 1),
        (
          -3_074_457_345_618_258_601, 9_223_372_036_854_775_806, 6_148_914_691_236_517_205,
          (1, 6_148_914_691_236_517_205), 1
        ),
        (
          -3_074_457_345_618_258_601, 4_611_686_018_427_387_904, 1_537_228_672_809_129_303,
          (1, 2_767_011_611_056_432_743), 1
        ),
        (
          -3_074_457_345_618_258_601, 4_611_686_018_427_387_902, 1_537_228_672_809_129_301, (1, 3),
          1
        ),
        (
          -3_074_457_345_618_258_601, 3_074_457_345_618_258_603, 2, (1, 1_537_228_672_809_129_302),
          1
        ),
        (
          -3_074_457_345_618_258_601, 3_074_457_345_618_258_601, 0, (3_074_457_345_618_258_601, 0),
          3_074_457_345_618_258_601
        ),
        (-3_074_457_345_618_258_601, 998_244_353, 510_154_252, (1, 797_790_486), 1),
        (-3_074_457_345_618_258_601, 1_000_000_007, 902_942_674, (1, 695_493_791), 1),
        (-3_074_457_345_618_258_601, 1_000_000_009, 51_857_261, (1, 605_754_540), 1),
        (
          -3_074_457_345_618_258_603, 9_223_372_036_854_775_807, 6_148_914_691_236_517_204,
          (1, 4_611_686_018_427_387_902), 1
        ),
        (
          -3_074_457_345_618_258_603, 4_611_686_018_427_387_903, 1_537_228_672_809_129_300,
          (3, 1_537_228_672_809_129_298), 3
        ),
        (
          -3_074_457_345_618_258_603, 4_611_686_018_427_387_903, 1_537_228_672_809_129_300,
          (3, 1_537_228_672_809_129_298), 3
        ),
        (
          -3_074_457_345_618_258_603, 3_074_457_345_618_258_602, 3_074_457_345_618_258_601,
          (1, 3_074_457_345_618_258_601), 1
        ),
        (
          -3_074_457_345_618_258_603, 3_074_457_345_618_258_602, 3_074_457_345_618_258_601,
          (1, 3_074_457_345_618_258_601), 1
        ),
        (-3_074_457_345_618_258_603, 1, 0, (1, 0), 1),
        (
          -3_074_457_345_618_258_603, 9_223_372_036_854_775_806, 6_148_914_691_236_517_203,
          (3, 3_074_457_345_618_258_599), 3
        ),
        (
          -3_074_457_345_618_258_603, 4_611_686_018_427_387_904, 1_537_228_672_809_129_301,
          (1, 4_611_686_018_427_387_901), 1
        ),
        (
          -3_074_457_345_618_258_603, 4_611_686_018_427_387_902, 1_537_228_672_809_129_299,
          (1, 3_689_348_814_741_910_321), 1
        ),
        (
          -3_074_457_345_618_258_603, 3_074_457_345_618_258_603, 0, (3_074_457_345_618_258_603, 0),
          3_074_457_345_618_258_603
        ),
        (
          -3_074_457_345_618_258_603, 3_074_457_345_618_258_601, 3_074_457_345_618_258_599,
          (1, 1_537_228_672_809_129_300), 1
        ),
        (-3_074_457_345_618_258_603, 998_244_353, 510_154_250, (1, 403_496_013), 1),
        (-3_074_457_345_618_258_603, 1_000_000_007, 902_942_672, (1, 103_819_439), 1),
        (-3_074_457_345_618_258_603, 1_000_000_009, 51_857_259, (1, 115_381_244), 1),
        (
          3_074_457_345_618_258_603, 9_223_372_036_854_775_807, 3_074_457_345_618_258_603,
          (1, 4_611_686_018_427_387_905), 1
        ),
        (
          3_074_457_345_618_258_603, 4_611_686_018_427_387_903, 3_074_457_345_618_258_603, (3, 3), 3
        ),
        (
          3_074_457_345_618_258_603, 4_611_686_018_427_387_903, 3_074_457_345_618_258_603, (3, 3), 3
        ),
        (3_074_457_345_618_258_603, 3_074_457_345_618_258_602, 1, (1, 1), 1),
        (3_074_457_345_618_258_603, 3_074_457_345_618_258_602, 1, (1, 1), 1),
        (3_074_457_345_618_258_603, 1, 0, (1, 0), 1),
        (
          3_074_457_345_618_258_603, 9_223_372_036_854_775_806, 3_074_457_345_618_258_603, (3, 3), 3
        ),
        (
          3_074_457_345_618_258_603, 4_611_686_018_427_387_904, 3_074_457_345_618_258_603, (1, 3), 1
        ),
        (
          3_074_457_345_618_258_603, 4_611_686_018_427_387_902, 3_074_457_345_618_258_603,
          (1, 922_337_203_685_477_581), 1
        ),
        (
          3_074_457_345_618_258_603, 3_074_457_345_618_258_603, 0, (3_074_457_345_618_258_603, 0),
          3_074_457_345_618_258_603
        ),
        (
          3_074_457_345_618_258_603, 3_074_457_345_618_258_601, 2, (1, 1_537_228_672_809_129_301), 1
        ),
        (3_074_457_345_618_258_603, 998_244_353, 488_090_103, (1, 594_748_340), 1),
        (3_074_457_345_618_258_603, 1_000_000_007, 97_057_335, (1, 896_180_568), 1),
        (3_074_457_345_618_258_603, 1_000_000_009, 948_142_750, (1, 884_618_765), 1),
        (
          3_074_457_345_618_258_601, 9_223_372_036_854_775_807, 3_074_457_345_618_258_601,
          (1, 2_305_843_009_213_693_951), 1
        ),
        (
          3_074_457_345_618_258_601, 4_611_686_018_427_387_903, 3_074_457_345_618_258_601,
          (1, 3_074_457_345_618_258_601), 1
        ),
        (
          3_074_457_345_618_258_601, 4_611_686_018_427_387_903, 3_074_457_345_618_258_601,
          (1, 3_074_457_345_618_258_601), 1
        ),
        (
          3_074_457_345_618_258_601, 3_074_457_345_618_258_602, 3_074_457_345_618_258_601,
          (1, 3_074_457_345_618_258_601), 1
        ),
        (
          3_074_457_345_618_258_601, 3_074_457_345_618_258_602, 3_074_457_345_618_258_601,
          (1, 3_074_457_345_618_258_601), 1
        ),
        (3_074_457_345_618_258_601, 1, 0, (1, 0), 1),
        (
          3_074_457_345_618_258_601, 9_223_372_036_854_775_806, 3_074_457_345_618_258_601,
          (1, 3_074_457_345_618_258_601), 1
        ),
        (
          3_074_457_345_618_258_601, 4_611_686_018_427_387_904, 3_074_457_345_618_258_601,
          (1, 1_844_674_407_370_955_161), 1
        ),
        (
          3_074_457_345_618_258_601, 4_611_686_018_427_387_902, 3_074_457_345_618_258_601,
          (1, 4_611_686_018_427_387_899), 1
        ),
        (
          3_074_457_345_618_258_601, 3_074_457_345_618_258_603, 3_074_457_345_618_258_601,
          (1, 1_537_228_672_809_129_301), 1
        ),
        (
          3_074_457_345_618_258_601, 3_074_457_345_618_258_601, 0, (3_074_457_345_618_258_601, 0),
          3_074_457_345_618_258_601
        ),
        (3_074_457_345_618_258_601, 998_244_353, 488_090_101, (1, 200_453_867), 1),
        (3_074_457_345_618_258_601, 1_000_000_007, 97_057_333, (1, 304_506_216), 1),
        (3_074_457_345_618_258_601, 1_000_000_009, 948_142_748, (1, 394_245_469), 1),
        (998_244_353, 9_223_372_036_854_775_807, 998_244_353, (1, 2_044_571_593_573_628_540), 1),
        (998_244_353, 4_611_686_018_427_387_903, 998_244_353, (1, 1_378_972_662_767_116_130), 1),
        (998_244_353, 4_611_686_018_427_387_903, 998_244_353, (1, 1_378_972_662_767_116_130), 1),
        (998_244_353, 3_074_457_345_618_258_602, 998_244_353, (1, 2_916_201_335_576_245_431), 1),
        (998_244_353, 3_074_457_345_618_258_602, 998_244_353, (1, 2_916_201_335_576_245_431), 1),
        (998_244_353, 1, 0, (1, 0), 1),
        (998_244_353, 9_223_372_036_854_775_806, 998_244_353, (1, 5_990_658_681_194_504_033), 1),
        (998_244_353, 4_611_686_018_427_387_904, 998_244_353, (1, 996_491_785_301_655_553), 1),
        (998_244_353, 4_611_686_018_427_387_902, 998_244_353, (1, 1_862_692_870_359_572_359), 1),
        (998_244_353, 3_074_457_345_618_258_603, 998_244_353, (1, 1_242_713_046_527_527_280), 1),
        (998_244_353, 3_074_457_345_618_258_601, 998_244_353, (1, 2_457_086_596_659_225_479), 1),
        (998_244_353, 998_244_353, 0, (998_244_353, 0), 998_244_353),
        (998_244_353, 1_000_000_007, 998_244_353, (1, 4_924_091), 1),
        (998_244_353, 1_000_000_009, 998_244_353, (1, 740_870_086), 1),
        (1_000_000_007, 9_223_372_036_854_775_807, 1_000_000_007, (1, 616_696_887_617_212_954), 1),
        (1_000_000_007, 4_611_686_018_427_387_903, 1_000_000_007, (1, 656_674_200_701_941_223), 1),
        (1_000_000_007, 4_611_686_018_427_387_903, 1_000_000_007, (1, 656_674_200_701_941_223), 1),
        (1_000_000_007, 3_074_457_345_618_258_602, 1_000_000_007, (1, 656_674_200_701_941_223), 1),
        (1_000_000_007, 3_074_457_345_618_258_602, 1_000_000_007, (1, 656_674_200_701_941_223), 1),
        (1_000_000_007, 1, 0, (1, 0), 1),
        (1_000_000_007, 9_223_372_036_854_775_806, 1_000_000_007, (1, 656_674_200_701_941_223), 1),
        (
          1_000_000_007, 4_611_686_018_427_387_904, 1_000_000_007, (1, 4_275_895_912_402_289_591), 1
        ),
        (1_000_000_007, 4_611_686_018_427_387_902, 1_000_000_007, (1, 162_220_979_843_304_191), 1),
        (1_000_000_007, 3_074_457_345_618_258_603, 1_000_000_007, (1, 319_188_434_617_197_674), 1),
        (
          1_000_000_007, 3_074_457_345_618_258_601, 1_000_000_007, (1, 2_138_265_979_603_978_056), 1
        ),
        (1_000_000_007, 998_244_353, 1_755_654, (1, 993_328_907), 1),
        (1_000_000_007, 1_000_000_007, 0, (1_000_000_007, 0), 1_000_000_007),
        (1_000_000_007, 1_000_000_009, 1_000_000_007, (1, 500_000_004), 1),
        (
          1_000_000_009, 9_223_372_036_854_775_807, 1_000_000_009, (1, 4_804_532_415_920_688_508), 1
        ),
        (
          1_000_000_009, 4_611_686_018_427_387_903, 1_000_000_009, (1, 2_760_933_337_918_885_219), 1
        ),
        (
          1_000_000_009, 4_611_686_018_427_387_903, 1_000_000_009, (1, 2_760_933_337_918_885_219), 1
        ),
        (
          1_000_000_009, 3_074_457_345_618_258_602, 1_000_000_009, (1, 2_760_933_337_918_885_219), 1
        ),
        (
          1_000_000_009, 3_074_457_345_618_258_602, 1_000_000_009, (1, 2_760_933_337_918_885_219), 1
        ),
        (1_000_000_009, 1, 0, (1, 0), 1),
        (
          1_000_000_009, 9_223_372_036_854_775_806, 1_000_000_009, (1, 2_760_933_337_918_885_219), 1
        ),
        (
          1_000_000_009, 4_611_686_018_427_387_904, 1_000_000_009, (1, 3_767_363_990_679_839_801), 1
        ),
        (1_000_000_009, 4_611_686_018_427_387_902, 1_000_000_009, (1, 877_072_220_083_935_683), 1),
        (1_000_000_009, 3_074_457_345_618_258_603, 1_000_000_009, (1, 354_734_709_969_760_237), 1),
        (
          1_000_000_009, 3_074_457_345_618_258_601, 1_000_000_009, (1, 1_862_366_478_383_310_949), 1
        ),
        (1_000_000_009, 998_244_353, 1_755_656, (1, 258_674_980), 1),
        (1_000_000_009, 1_000_000_007, 2, (1, 500_000_004), 1),
        (1_000_000_009, 1_000_000_009, 0, (1_000_000_009, 0), 1_000_000_009),
        (
          -998_244_353, 9_223_372_036_854_775_807, 9_223_372_035_856_531_454,
          (1, 7_178_800_443_281_147_267), 1
        ),
        (
          -998_244_353, 4_611_686_018_427_387_903, 4_611_686_017_429_143_550,
          (1, 3_232_713_355_660_271_773), 1
        ),
        (
          -998_244_353, 4_611_686_018_427_387_903, 4_611_686_017_429_143_550,
          (1, 3_232_713_355_660_271_773), 1
        ),
        (
          -998_244_353, 3_074_457_345_618_258_602, 3_074_457_344_620_014_249,
          (1, 158_256_010_042_013_171), 1
        ),
        (
          -998_244_353, 3_074_457_345_618_258_602, 3_074_457_344_620_014_249,
          (1, 158_256_010_042_013_171), 1
        ),
        (-998_244_353, 1, 0, (1, 0), 1),
        (
          -998_244_353, 9_223_372_036_854_775_806, 9_223_372_035_856_531_453,
          (1, 3_232_713_355_660_271_773), 1
        ),
        (
          -998_244_353, 4_611_686_018_427_387_904, 4_611_686_017_429_143_551,
          (1, 3_615_194_233_125_732_351), 1
        ),
        (
          -998_244_353, 4_611_686_018_427_387_902, 4_611_686_017_429_143_549,
          (1, 2_748_993_148_067_815_543), 1
        ),
        (
          -998_244_353, 3_074_457_345_618_258_603, 3_074_457_344_620_014_250,
          (1, 1_831_744_299_090_731_323), 1
        ),
        (
          -998_244_353, 3_074_457_345_618_258_601, 3_074_457_344_620_014_248,
          (1, 617_370_748_959_033_122), 1
        ),
        (-998_244_353, 998_244_353, 0, (998_244_353, 0), 998_244_353),
        (-998_244_353, 1_000_000_007, 1_755_654, (1, 995_075_916), 1),
        (-998_244_353, 1_000_000_009, 1_755_656, (1, 259_129_923), 1),
        (
          -1_000_000_007, 9_223_372_036_854_775_807, 9_223_372_035_854_775_800,
          (1, 8_606_675_149_237_562_853), 1
        ),
        (
          -1_000_000_007, 4_611_686_018_427_387_903, 4_611_686_017_427_387_896,
          (1, 3_955_011_817_725_446_680), 1
        ),
        (
          -1_000_000_007, 4_611_686_018_427_387_903, 4_611_686_017_427_387_896,
          (1, 3_955_011_817_725_446_680), 1
        ),
        (
          -1_000_000_007, 3_074_457_345_618_258_602, 3_074_457_344_618_258_595,
          (1, 2_417_783_144_916_317_379), 1
        ),
        (
          -1_000_000_007, 3_074_457_345_618_258_602, 3_074_457_344_618_258_595,
          (1, 2_417_783_144_916_317_379), 1
        ),
        (-1_000_000_007, 1, 0, (1, 0), 1),
        (
          -1_000_000_007, 9_223_372_036_854_775_806, 9_223_372_035_854_775_799,
          (1, 8_566_697_836_152_834_583), 1
        ),
        (
          -1_000_000_007, 4_611_686_018_427_387_904, 4_611_686_017_427_387_897,
          (1, 335_790_106_025_098_313), 1
        ),
        (
          -1_000_000_007, 4_611_686_018_427_387_902, 4_611_686_017_427_387_895,
          (1, 4_449_465_038_584_083_711), 1
        ),
        (
          -1_000_000_007, 3_074_457_345_618_258_603, 3_074_457_344_618_258_596,
          (1, 2_755_268_911_001_060_929), 1
        ),
        (
          -1_000_000_007, 3_074_457_345_618_258_601, 3_074_457_344_618_258_594,
          (1, 936_191_366_014_280_545), 1
        ),
        (-1_000_000_007, 998_244_353, 996_488_699, (1, 4_915_446), 1),
        (-1_000_000_007, 1_000_000_007, 0, (1_000_000_007, 0), 1_000_000_007),
        (-1_000_000_007, 1_000_000_009, 2, (1, 500_000_005), 1),
        (
          -1_000_000_009, 9_223_372_036_854_775_807, 9_223_372_035_854_775_798,
          (1, 4_418_839_620_934_087_299), 1
        ),
        (
          -1_000_000_009, 4_611_686_018_427_387_903, 4_611_686_017_427_387_894,
          (1, 1_850_752_680_508_502_684), 1
        ),
        (
          -1_000_000_009, 4_611_686_018_427_387_903, 4_611_686_017_427_387_894,
          (1, 1_850_752_680_508_502_684), 1
        ),
        (
          -1_000_000_009, 3_074_457_345_618_258_602, 3_074_457_344_618_258_593,
          (1, 313_524_007_699_373_383), 1
        ),
        (
          -1_000_000_009, 3_074_457_345_618_258_602, 3_074_457_344_618_258_593,
          (1, 313_524_007_699_373_383), 1
        ),
        (-1_000_000_009, 1, 0, (1, 0), 1),
        (
          -1_000_000_009, 9_223_372_036_854_775_806, 9_223_372_035_854_775_797,
          (1, 6_462_438_698_935_890_587), 1
        ),
        (
          -1_000_000_009, 4_611_686_018_427_387_904, 4_611_686_017_427_387_895,
          (1, 844_322_027_747_548_103), 1
        ),
        (
          -1_000_000_009, 4_611_686_018_427_387_902, 4_611_686_017_427_387_893,
          (1, 3_734_613_798_343_452_219), 1
        ),
        (
          -1_000_000_009, 3_074_457_345_618_258_603, 3_074_457_344_618_258_594,
          (1, 2_719_722_635_648_498_366), 1
        ),
        (
          -1_000_000_009, 3_074_457_345_618_258_601, 3_074_457_344_618_258_592,
          (1, 1_212_090_867_234_947_652), 1
        ),
        (-1_000_000_009, 998_244_353, 996_488_697, (1, 739_569_373), 1),
        (-1_000_000_009, 1_000_000_007, 1_000_000_005, (1, 500_000_003), 1),
        (-1_000_000_009, 1_000_000_009, 0, (1_000_000_009, 0), 1_000_000_009),
      ]

      for (a, b, a2, eg, g) in ab {
        let _eg = _Internal.inv_gcd(a, b)
        XCTAssertEqual(a2, _Internal.safe_mod(a, b))
        XCTAssertEqual(eg.0, _eg.0)
        XCTAssertEqual(eg.1, _eg.1)
        XCTAssertEqual(g, gcd(a2, b))
      }
    }

    func testPrimitiveRootTestNaive() throws {
      //        for (int m = 2; m <= 10000; m++) {
      for m in 2 ..<= 10000 {
        if !_Internal.is_prime_constexpr(Int(m)) { continue }
        let n = _Internal.primitive_root_constexpr(m)
        XCTAssertLessThanOrEqual(1, n)
        XCTAssertLessThan(n, m)
        var x: Int = 1
        //            for (int i = 1; i <= m - 2; i++) {
        for _ in 1 ..<= (m - 2) {
          x = x * n % m
          // x == n^i
          XCTAssertNotEqual(1, x)
        }
        x = x * n % m
        XCTAssertEqual(1, x)
      }
    }

    func testPrimitiveRootTemplateTest() throws {

      XCTAssertTrue(is_primitive_root(2, (_Internal.primitive_root(2))))
      XCTAssertTrue(is_primitive_root(3, (_Internal.primitive_root(3))))
      XCTAssertTrue(is_primitive_root(5, (_Internal.primitive_root(5))))
      XCTAssertTrue(is_primitive_root(7, (_Internal.primitive_root(7))))
      XCTAssertTrue(is_primitive_root(11, (_Internal.primitive_root(11))))
      XCTAssertTrue(is_primitive_root(998_244_353, (_Internal.primitive_root(998_244_353))))
      XCTAssertTrue(is_primitive_root(1_000_000_007, (_Internal.primitive_root(1_000_000_007))))

      XCTAssertTrue(is_primitive_root(469_762_049, (_Internal.primitive_root(469_762_049))))
      XCTAssertTrue(is_primitive_root(167_772_161, (_Internal.primitive_root(167_772_161))))
      XCTAssertTrue(is_primitive_root(754_974_721, (_Internal.primitive_root(754_974_721))))
      XCTAssertTrue(is_primitive_root(324_013_369, (_Internal.primitive_root(324_013_369))))
      XCTAssertTrue(is_primitive_root(831_143_041, (_Internal.primitive_root(831_143_041))))
      XCTAssertTrue(is_primitive_root(1_685_283_601, (_Internal.primitive_root(1_685_283_601))))
    }

    func testPrimitiveRootTest() throws {
      //        for (int i = 0; i < 1000; i++) {
      for i in 0..<1000 {
        let x = Int(CInt.max) - i
        if !_Internal.is_prime_constexpr(Int(x)) { continue }
        XCTAssertTrue(
          is_primitive_root(x, _Internal.primitive_root_constexpr(x)))
      }
    }

    func testPrimitiveRootIntMaxTest() throws {
      //        for (int i = 0; i < 1000; i++) {
      for i in 0..<1000 {
        let x = Int(Int.max) - i
        if !_Internal.is_prime_constexpr(Int(x)) { continue }
        XCTAssertTrue(
          is_primitive_root(x, _Internal.primitive_root_constexpr(x)))
      }
    }

  #endif
}
