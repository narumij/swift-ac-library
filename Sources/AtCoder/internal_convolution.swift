extension Array where Element: AdditiveArithmetic {
  @inlinable
  public mutating func resize(_ n: Int) {
    guard count != n else { return }
    if count > n {
      removeLast(count - n)
      return
    }
    reserveCapacity(Swift.max(count, n))
    append(contentsOf: repeatElement(.zero, count: n - count))
  }
}

extension ArraySlice where Element: AdditiveArithmetic {
  @inlinable
  public mutating func resize(_ n: Int) {
    guard count != n else { return }
    if count > n {
      removeLast(count - n)
      return
    }
    reserveCapacity(Swift.max(count, n))
    append(contentsOf: repeatElement(.zero, count: n - count))
  }
}

extension static_modint {
  @inlinable
  init(ull v: CUnsignedLongLong) {
    _v = __modint_v(ull: v, umod: static_mod.umod)
  }
  
  @inlinable @inline(__always)
  func value() -> UINT { _v }
  
  @inlinable @inline(__always)
  func value() -> ULL { ULL(_v) }
}

@usableFromInline
protocol __cached_fft_info {}

extension _Internal.fft_info: __cached_fft_info { }

extension _Internal {

  @usableFromInline
  enum __static_const_fft_info {

    @usableFromInline
    nonisolated(unsafe)
      static var cache: [UINT: __cached_fft_info] = [:]

    @inlinable
    static func info<MOD: static_mod>(_ t: MOD.Type) -> fft_info<MOD> {

      if MOD.umod == mod_998_244_353.umod {
        return fft_info_998_244_353 as! fft_info<MOD>
      }

      if MOD.umod == mod_754_974_721.umod {
        return fft_info_754_974_721 as! fft_info<MOD>
      }

      if MOD.umod == mod_167_772_161.umod {
        return fft_info_167_772_161 as! fft_info<MOD>
      }

      if MOD.umod == mod_469_762_049.umod {
        return fft_info_469_762_049 as! fft_info<MOD>
      }

      if let cached = cache[MOD.umod] {
        return cached as! fft_info<MOD>
      }

      let info: __cached_fft_info = _Internal.fft_info<MOD>()
      cache[MOD.umod] = info
      return info as! fft_info<MOD>
    }
  }
}

extension _Internal {

  @usableFromInline
  nonisolated(unsafe) static var fft_info_998_244_353: fft_info<mod_998_244_353> =
    fft_info<mod_998_244_353>(
      root: [
        1, 998_244_352, 911_660_635, 372_528_824, 929_031_873, 452_798_380, 922_799_308,
        781_712_469, 476_477_967, 166_035_806, 258_648_936, 584_193_783, 63_912_897, 350_007_156,
        666_702_199, 968_855_178, 629_671_588, 24_514_907, 996_173_970, 363_395_222, 565_042_129,
        733_596_141, 267_099_868, 15_311_432,
      ],
      iroot: [
        1, 998_244_352, 86_583_718, 509_520_358, 337_190_230, 87_557_064, 609_441_965, 135_236_158,
        304_459_705, 685_443_576, 381_598_368, 335_559_352, 129_292_727, 358_024_708, 814_576_206,
        708_402_881, 283_043_518, 3_707_709, 121_392_023, 704_923_114, 950_391_366, 428_961_804,
        382_752_275, 469_870_224,
      ],
      rate2: [
        911_660_635, 509_520_358, 369_330_050, 332_049_552, 983_190_778, 123_842_337, 238_493_703,
        975_955_924, 603_855_026, 856_644_456, 131_300_601, 842_657_263, 730_768_835, 942_482_514,
        806_263_778, 151_565_301, 510_815_449, 503_497_456, 743_006_876, 741_047_443, 56_250_497,
        867_605_899,
      ],
      irate2: [
        86_583_718, 372_528_824, 373_294_451, 645_684_063, 112_220_581, 692_852_209, 155_456_985,
        797_128_860, 90_816_748, 860_285_882, 927_414_960, 354_738_543, 109_331_171, 293_255_632,
        535_113_200, 308_540_755, 121_186_627, 608_385_704, 438_932_459, 359_477_183, 824_071_951,
        103_369_235,
      ],
      rate3: [
        372_528_824, 337_190_230, 454_590_761, 816_400_692, 578_227_951, 180_142_363, 83_780_245,
        6_597_683, 70_046_822, 623_238_099, 183_021_267, 402_682_409, 631_680_428, 344_509_872,
        689_220_186, 365_017_329, 774_342_554, 729_444_058, 102_986_190, 128_751_033, 395_565_204,
      ],
      irate3: [
        509_520_358, 929_031_873, 170_256_584, 839_780_419, 282_974_284, 395_914_482, 444_904_435,
        72_135_471, 638_914_820, 66_769_500, 771_127_074, 985_925_487, 262_319_669, 262_341_272,
        625_870_173, 768_022_760, 859_816_005, 914_661_783, 430_819_711, 272_774_365, 530_924_681,
      ]
    )
}

@usableFromInline
enum mod_754_974_721: static_mod {
  public static let umod: CUnsignedInt = 754_974_721
}

@usableFromInline
enum mod_167_772_161: static_mod {
  public static let umod: CUnsignedInt = 167_772_161
}

@usableFromInline
enum mod_469_762_049: static_mod {
  public static let umod: CUnsignedInt = 469_762_049
}

extension _Internal {

  @usableFromInline
  nonisolated(unsafe) static var fft_info_754_974_721: fft_info<mod_754_974_721> =
    fft_info<mod_754_974_721>(
      root: [
        1, 754_974_720, 323_860_177, 205_430_076, 49_823_357, 720_978_774, 508_199_684, 552_135_903,
        704_612_943, 213_676_226, 445_365_557, 432_094_283, 259_521_057, 360_143_433, 332_374_468,
        313_312_672, 493_419_254, 153_382_660, 234_918_898, 128_937_321, 654_739_677, 310_788_621,
        132_391_041, 363_154_963, 739_831_874,
      ],
      iroot: [
        1, 754_974_720, 431_114_544, 709_730_407, 297_637_169, 678_681_937, 423_560_185,
        683_632_771, 115_166_683, 27_751_383, 183_757_371, 9_547_754, 321_264_837, 627_836_255,
        225_200_971, 712_095_778, 2_803_165, 310_458_842, 463_393_667, 67_695_336, 548_741_982,
        604_909_844, 566_666_237, 478_614_913, 337_633_511,
      ],
      rate2: [
        323_860_177, 709_730_407, 436_702_940, 377_572_811, 498_550_177, 265_767_825, 100_966_039,
        179_671_739, 669_698_534, 133_401_683, 473_130_419, 31_725_267, 490_947_959, 457_689_220,
        238_049_902, 49_087_920, 531_104_465, 448_493_484, 262_339_740, 717_535_334, 230_862_726,
        416_349_974, 413_022_269,
      ],
      irate2: [
        431_114_544, 205_430_076, 560_644_912, 287_842_920, 662_221_072, 3_742_006, 250_769_401,
        512_611_432, 114_808_946, 480_642_746, 472_385_404, 152_834_416, 131_937_947, 932118,
        246_823_069, 305_783_701, 453_008_707, 746_618_366, 510_123_862, 69_538_303, 659_667_489,
        259_138_136, 124_632_795,
      ],
      rate3: [
        205_430_076, 297_637_169, 38_169_123, 583_927_618, 21_966_749, 5_960_399, 439_660_654,
        138_858_397, 86_401_606, 704_734_401, 706_214_808, 529_255_342, 740_866_442, 298_048_967,
        473_658_922, 292_783_518, 224_746_008, 333_315_044, 50_882_569, 119_632_285, 301_115_683,
        485_544_978,
      ],
      irate3: [
        709_730_407, 49_823_357, 249_171_751, 397_715_824, 206_603_580, 385_612_612, 319_223_840,
        411_876_190, 285_496_991, 633_847_748, 468_223_399, 106_222_650, 741_726_964, 454_213_805,
        66_177_539, 332_687_769, 674_731_025, 714_641_282, 436_547_373, 400_848_289, 747_608_279,
        252_200_716,
      ]
    )

  @usableFromInline
  nonisolated(unsafe) static var fft_info_167_772_161: fft_info<mod_167_772_161> =
    fft_info<mod_167_772_161>(
      root: [
        1, 167_772_160, 65_249_968, 71_493_608, 116_878_283, 17_334_830, 54_112_143, 370529,
        26_238_939, 57_844_624, 134_785_078, 83_629_286, 150_794_572, 42_000_181, 129_200_985,
        34_951_379, 48_967_582, 51_958_270, 87_327_368, 127_218_630, 88_009_046, 147_771_621,
        98_217_575, 131_341_181, 59049, 243,
      ],
      iroot: [
        1, 167_772_160, 102_522_193, 137_365_239, 127_635_702, 7_847_275, 17_519_876, 13_908_831,
        31_840_780, 64_014_230, 111_398_802, 63_739_760, 102_971_782, 31_279_966, 68_476_275,
        66_832_766, 14_997_684, 9_639_726, 150_281_339, 67_941_598, 75_955_219, 148_642_633,
        85_248_894, 16_470_339, 149_602_455, 114_609_789,
      ],
      rate2: [
        65_249_968, 137_365_239, 35_921_276, 103_665_800, 89_728_614, 164_955_302, 108_901_219,
        163_950_188, 113_252_399, 166_581_688, 59_783_366, 95_476_790, 130_818_126, 39_440_948,
        65_800_545, 14_559_656, 3_285_286, 36_462_062, 164_082_627, 9_320_421, 66_343_657,
        69_024_390, 38_289_678, 153_423_254,
      ],
      irate2: [
        102_522_193, 71_493_608, 26_998_229, 133_555_027, 128_975_965, 16_363_816, 145_463_520,
        130_828_795, 26_375_299, 18_078_794, 87_407_453, 28_151_929, 49_401_241, 112_914_531,
        118_959_329, 68_815_302, 71_865_958, 21_459_372, 44_393_528, 43_709_352, 30_681_399,
        153_195_333, 141_748_999, 24_239_487,
      ],
      rate3: [
        71_493_608, 127_635_702, 128_334_446, 133_461_170, 147_018_462, 87_209_278, 138_366_459,
        158_025_497, 17_615_975, 88_312_855, 10_286_836, 82_394_168, 167_205_967, 78_796_605,
        12_225_585, 135_223_055, 52_612_547, 2_637_462, 33_359_789, 109_165_474, 106_522_867,
        157_178_679, 75_876_243,
      ],
      irate3: [
        137_365_239, 116_878_283, 110_675_021, 163_613_908, 136_577_210, 34_104_569, 20_165_390,
        117_999_053, 62_849_735, 68_029_733, 94_120_900, 119_668_769, 120_663_005, 32_094_364,
        149_970_280, 69_503_493, 99_507_006, 4_136_192, 139_694_231, 134_213_622, 102_184_923,
        22_556_925, 159_396_809,
      ]
    )

  @usableFromInline
  nonisolated(unsafe) static var fft_info_469_762_049: fft_info<mod_469_762_049> =
    fft_info<mod_469_762_049>(
      root: [
        1, 469_762_048, 450_151_958, 129_701_348, 426_037_461, 244_709_223, 210_853_138,
        189_158_148, 338_628_632, 25_153_357, 110_059_487, 165_447_688, 244_412_522, 62_025_685,
        19_512_135, 372_627_191, 386_080_322, 321_129_726, 422_997_289, 49_553_715, 197_868_229,
        297_449_090, 391_371_999, 385_303_873, 320_192_759, 4_782_969, 2187,
      ],
      iroot: [
        1, 469_762_048, 19_610_091, 26_623_616, 358_191_614, 278_703_339, 58_439_238, 230_980_285,
        215_855_482, 436_579_181, 458_753_944, 63_413_564, 309_717_554, 318_475_127, 317_243_944,
        271_119_509, 380_600_599, 417_932_558, 44_275_780, 96_523_612, 256_026_808, 131_257_384,
        426_545_640, 300_035_530, 49_490_419, 392_193_156, 410_692_747,
      ],
      rate2: [
        450_151_958, 26_623_616, 25_192_837, 305_390_008, 399_060_560, 78_724_413, 312_251_397,
        151_088_193, 437_503_217, 339_869_829, 197_503_427, 460_844_482, 64_795_813, 392_699_793,
        323_591_778, 435_162_849, 324_666_788, 397_071_166, 191_521_520, 39_442_863, 102_932_772,
        52_822_010, 231_589_706, 155_147_527, 344_173_924,
      ],
      irate2: [
        19_610_091, 129_701_348, 104_677_229, 445_839_763, 375_500_824, 451_642_859, 145_445_927,
        77_724_141, 367_250_623, 54_456_563, 257_713_867, 444_918_711, 335_270_416, 371_371_281,
        307_213_086, 452_878_044, 243_328_637, 152_011_944, 315_423_951, 456_185_089, 218_081_060,
        136_058_803, 203_260_256, 412_215_962, 279_486_966,
      ],
      rate3: [
        129_701_348, 358_191_614, 402_152_097, 345_038_213, 211_638_587, 4_122_572, 386_688_150,
        144_456_548, 449_668_585, 142_445_815, 210_245_808, 60_798_333, 117_629_089, 394_258_599,
        161_246_834, 392_043_613, 213_529_764, 192_527_415, 113_333_535, 462_069_946, 155_386_099,
        333_453_653, 5_562_051, 311_675_917,
      ],
      irate3: [
        26_623_616, 426_037_461, 269_604_844, 184_209_115, 123_638_379, 137_578_908, 217_296_754,
        450_792_571, 303_798_807, 187_328_293, 237_091_113, 365_548_979, 340_531_665, 22_112_954,
        343_119_676, 386_493_255, 429_873_751, 192_036_429, 206_122_223, 224_823_445, 147_517_911,
        461_548_140, 398137, 276_589_614,
      ]
    )

}
